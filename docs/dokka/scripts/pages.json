[{"name":"BOTTOM_LEFT_CORNER","description":"qrcode.internals.QRCodeRegion.BOTTOM_LEFT_CORNER","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-b-o-t-t-o-m_-l-e-f-t_-c-o-r-n-e-r/index.html","searchKeys":["BOTTOM_LEFT_CORNER","BOTTOM_LEFT_CORNER","qrcode.internals.QRCodeRegion.BOTTOM_LEFT_CORNER"]},{"name":"BOTTOM_MID","description":"qrcode.internals.QRCodeRegion.BOTTOM_MID","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-b-o-t-t-o-m_-m-i-d/index.html","searchKeys":["BOTTOM_MID","BOTTOM_MID","qrcode.internals.QRCodeRegion.BOTTOM_MID"]},{"name":"BOTTOM_RIGHT_CORNER","description":"qrcode.internals.QRCodeRegion.BOTTOM_RIGHT_CORNER","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-b-o-t-t-o-m_-r-i-g-h-t_-c-o-r-n-e-r/index.html","searchKeys":["BOTTOM_RIGHT_CORNER","BOTTOM_RIGHT_CORNER","qrcode.internals.QRCodeRegion.BOTTOM_RIGHT_CORNER"]},{"name":"CENTER","description":"qrcode.internals.QRCodeRegion.CENTER","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-c-e-n-t-e-r/index.html","searchKeys":["CENTER","CENTER","qrcode.internals.QRCodeRegion.CENTER"]},{"name":"CIRCLE","description":"qrcode.QRCodeShapesEnum.CIRCLE","location":"-q-r-code--kotlin/qrcode/-q-r-code-shapes-enum/-c-i-r-c-l-e/index.html","searchKeys":["CIRCLE","CIRCLE","qrcode.QRCodeShapesEnum.CIRCLE"]},{"name":"CUSTOM","description":"qrcode.QRCodeShapesEnum.CUSTOM","location":"-q-r-code--kotlin/qrcode/-q-r-code-shapes-enum/-c-u-s-t-o-m/index.html","searchKeys":["CUSTOM","CUSTOM","qrcode.QRCodeShapesEnum.CUSTOM"]},{"name":"DEFAULT","description":"qrcode.internals.QRCodeSquareType.DEFAULT","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-type/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","DEFAULT","qrcode.internals.QRCodeSquareType.DEFAULT"]},{"name":"DEFAULT","description":"qrcode.raw.QRCodeDataType.DEFAULT","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-data-type/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","DEFAULT","qrcode.raw.QRCodeDataType.DEFAULT"]},{"name":"HIGH","description":"qrcode.raw.ErrorCorrectionLevel.HIGH","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/-h-i-g-h/index.html","searchKeys":["HIGH","HIGH","qrcode.raw.ErrorCorrectionLevel.HIGH"]},{"name":"LEFT_MID","description":"qrcode.internals.QRCodeRegion.LEFT_MID","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-l-e-f-t_-m-i-d/index.html","searchKeys":["LEFT_MID","LEFT_MID","qrcode.internals.QRCodeRegion.LEFT_MID"]},{"name":"LOW","description":"qrcode.raw.ErrorCorrectionLevel.LOW","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/-l-o-w/index.html","searchKeys":["LOW","LOW","qrcode.raw.ErrorCorrectionLevel.LOW"]},{"name":"MARGIN","description":"qrcode.internals.QRCodeRegion.MARGIN","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-m-a-r-g-i-n/index.html","searchKeys":["MARGIN","MARGIN","qrcode.internals.QRCodeRegion.MARGIN"]},{"name":"MARGIN","description":"qrcode.internals.QRCodeSquareType.MARGIN","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-type/-m-a-r-g-i-n/index.html","searchKeys":["MARGIN","MARGIN","qrcode.internals.QRCodeSquareType.MARGIN"]},{"name":"MEDIUM","description":"qrcode.raw.ErrorCorrectionLevel.MEDIUM","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/-m-e-d-i-u-m/index.html","searchKeys":["MEDIUM","MEDIUM","qrcode.raw.ErrorCorrectionLevel.MEDIUM"]},{"name":"NUMBERS","description":"qrcode.raw.QRCodeDataType.NUMBERS","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-data-type/-n-u-m-b-e-r-s/index.html","searchKeys":["NUMBERS","NUMBERS","qrcode.raw.QRCodeDataType.NUMBERS"]},{"name":"PATTERN000","description":"qrcode.raw.MaskPattern.PATTERN000","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/-p-a-t-t-e-r-n000/index.html","searchKeys":["PATTERN000","PATTERN000","qrcode.raw.MaskPattern.PATTERN000"]},{"name":"PATTERN001","description":"qrcode.raw.MaskPattern.PATTERN001","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/-p-a-t-t-e-r-n001/index.html","searchKeys":["PATTERN001","PATTERN001","qrcode.raw.MaskPattern.PATTERN001"]},{"name":"PATTERN010","description":"qrcode.raw.MaskPattern.PATTERN010","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/-p-a-t-t-e-r-n010/index.html","searchKeys":["PATTERN010","PATTERN010","qrcode.raw.MaskPattern.PATTERN010"]},{"name":"PATTERN011","description":"qrcode.raw.MaskPattern.PATTERN011","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/-p-a-t-t-e-r-n011/index.html","searchKeys":["PATTERN011","PATTERN011","qrcode.raw.MaskPattern.PATTERN011"]},{"name":"PATTERN100","description":"qrcode.raw.MaskPattern.PATTERN100","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/-p-a-t-t-e-r-n100/index.html","searchKeys":["PATTERN100","PATTERN100","qrcode.raw.MaskPattern.PATTERN100"]},{"name":"PATTERN101","description":"qrcode.raw.MaskPattern.PATTERN101","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/-p-a-t-t-e-r-n101/index.html","searchKeys":["PATTERN101","PATTERN101","qrcode.raw.MaskPattern.PATTERN101"]},{"name":"PATTERN110","description":"qrcode.raw.MaskPattern.PATTERN110","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/-p-a-t-t-e-r-n110/index.html","searchKeys":["PATTERN110","PATTERN110","qrcode.raw.MaskPattern.PATTERN110"]},{"name":"PATTERN111","description":"qrcode.raw.MaskPattern.PATTERN111","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/-p-a-t-t-e-r-n111/index.html","searchKeys":["PATTERN111","PATTERN111","qrcode.raw.MaskPattern.PATTERN111"]},{"name":"POSITION_ADJUST","description":"qrcode.internals.QRCodeSquareType.POSITION_ADJUST","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-type/-p-o-s-i-t-i-o-n_-a-d-j-u-s-t/index.html","searchKeys":["POSITION_ADJUST","POSITION_ADJUST","qrcode.internals.QRCodeSquareType.POSITION_ADJUST"]},{"name":"POSITION_PROBE","description":"qrcode.internals.QRCodeSquareType.POSITION_PROBE","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-type/-p-o-s-i-t-i-o-n_-p-r-o-b-e/index.html","searchKeys":["POSITION_PROBE","POSITION_PROBE","qrcode.internals.QRCodeSquareType.POSITION_PROBE"]},{"name":"RIGHT_MID","description":"qrcode.internals.QRCodeRegion.RIGHT_MID","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-r-i-g-h-t_-m-i-d/index.html","searchKeys":["RIGHT_MID","RIGHT_MID","qrcode.internals.QRCodeRegion.RIGHT_MID"]},{"name":"ROUNDED_SQUARE","description":"qrcode.QRCodeShapesEnum.ROUNDED_SQUARE","location":"-q-r-code--kotlin/qrcode/-q-r-code-shapes-enum/-r-o-u-n-d-e-d_-s-q-u-a-r-e/index.html","searchKeys":["ROUNDED_SQUARE","ROUNDED_SQUARE","qrcode.QRCodeShapesEnum.ROUNDED_SQUARE"]},{"name":"SQUARE","description":"qrcode.QRCodeShapesEnum.SQUARE","location":"-q-r-code--kotlin/qrcode/-q-r-code-shapes-enum/-s-q-u-a-r-e/index.html","searchKeys":["SQUARE","SQUARE","qrcode.QRCodeShapesEnum.SQUARE"]},{"name":"TIMING_PATTERN","description":"qrcode.internals.QRCodeSquareType.TIMING_PATTERN","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-type/-t-i-m-i-n-g_-p-a-t-t-e-r-n/index.html","searchKeys":["TIMING_PATTERN","TIMING_PATTERN","qrcode.internals.QRCodeSquareType.TIMING_PATTERN"]},{"name":"TOP_LEFT_CORNER","description":"qrcode.internals.QRCodeRegion.TOP_LEFT_CORNER","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-t-o-p_-l-e-f-t_-c-o-r-n-e-r/index.html","searchKeys":["TOP_LEFT_CORNER","TOP_LEFT_CORNER","qrcode.internals.QRCodeRegion.TOP_LEFT_CORNER"]},{"name":"TOP_MID","description":"qrcode.internals.QRCodeRegion.TOP_MID","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-t-o-p_-m-i-d/index.html","searchKeys":["TOP_MID","TOP_MID","qrcode.internals.QRCodeRegion.TOP_MID"]},{"name":"TOP_RIGHT_CORNER","description":"qrcode.internals.QRCodeRegion.TOP_RIGHT_CORNER","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-t-o-p_-r-i-g-h-t_-c-o-r-n-e-r/index.html","searchKeys":["TOP_RIGHT_CORNER","TOP_RIGHT_CORNER","qrcode.internals.QRCodeRegion.TOP_RIGHT_CORNER"]},{"name":"UNKNOWN","description":"qrcode.internals.QRCodeRegion.UNKNOWN","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","qrcode.internals.QRCodeRegion.UNKNOWN"]},{"name":"UPPER_ALPHA_NUM","description":"qrcode.raw.QRCodeDataType.UPPER_ALPHA_NUM","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-data-type/-u-p-p-e-r_-a-l-p-h-a_-n-u-m/index.html","searchKeys":["UPPER_ALPHA_NUM","UPPER_ALPHA_NUM","qrcode.raw.QRCodeDataType.UPPER_ALPHA_NUM"]},{"name":"VERY_HIGH","description":"qrcode.raw.ErrorCorrectionLevel.VERY_HIGH","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/-v-e-r-y_-h-i-g-h/index.html","searchKeys":["VERY_HIGH","VERY_HIGH","qrcode.raw.ErrorCorrectionLevel.VERY_HIGH"]},{"name":"abstract fun bg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.QRCodeColorFunction.bg","location":"-q-r-code--kotlin/qrcode.color/-q-r-code-color-function/bg.html","searchKeys":["bg","abstract fun bg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.QRCodeColorFunction.bg"]},{"name":"abstract fun fg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.QRCodeColorFunction.fg","location":"-q-r-code--kotlin/qrcode.color/-q-r-code-color-function/fg.html","searchKeys":["fg","abstract fun fg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.QRCodeColorFunction.fg"]},{"name":"abstract fun renderControlSquare(xOffset: Int, yOffset: Int, colorFn: QRCodeColorFunction, square: QRCodeSquare, canvas: QRCodeGraphics, qrCode: QRCode)","description":"qrcode.shape.QRCodeShapeFunction.renderControlSquare","location":"-q-r-code--kotlin/qrcode.shape/-q-r-code-shape-function/render-control-square.html","searchKeys":["renderControlSquare","abstract fun renderControlSquare(xOffset: Int, yOffset: Int, colorFn: QRCodeColorFunction, square: QRCodeSquare, canvas: QRCodeGraphics, qrCode: QRCode)","qrcode.shape.QRCodeShapeFunction.renderControlSquare"]},{"name":"abstract fun renderSquare(x: Int, y: Int, colorFn: QRCodeColorFunction, square: QRCodeSquare, canvas: QRCodeGraphics, qrCode: QRCode)","description":"qrcode.shape.QRCodeShapeFunction.renderSquare","location":"-q-r-code--kotlin/qrcode.shape/-q-r-code-shape-function/render-square.html","searchKeys":["renderSquare","abstract fun renderSquare(x: Int, y: Int, colorFn: QRCodeColorFunction, square: QRCodeSquare, canvas: QRCodeGraphics, qrCode: QRCode)","qrcode.shape.QRCodeShapeFunction.renderSquare"]},{"name":"class LinearGradientColorFunction constructor(val startForegroundColor: Int, val endForegroundColor: Int, val backgroundColor: Int = Colors.WHITE, var vertical: Boolean = true) : QRCodeColorFunction","description":"qrcode.color.LinearGradientColorFunction","location":"-q-r-code--kotlin/qrcode.color/-linear-gradient-color-function/index.html","searchKeys":["LinearGradientColorFunction","class LinearGradientColorFunction constructor(val startForegroundColor: Int, val endForegroundColor: Int, val backgroundColor: Int = Colors.WHITE, var vertical: Boolean = true) : QRCodeColorFunction","qrcode.color.LinearGradientColorFunction"]},{"name":"class QRCodeBuilder constructor(shape: QRCodeShapesEnum, customShapeFunction: QRCodeShapeFunction? = null)","description":"qrcode.QRCodeBuilder","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/index.html","searchKeys":["QRCodeBuilder","class QRCodeBuilder constructor(shape: QRCodeShapesEnum, customShapeFunction: QRCodeShapeFunction? = null)","qrcode.QRCodeBuilder"]},{"name":"class QRCodeProcessor constructor(data: String, errorCorrectionLevel: ErrorCorrectionLevel = ErrorCorrectionLevel.MEDIUM, dataType: QRCodeDataType = QRUtil.getDataType(data), val graphicsFactory: QRCodeGraphicsFactory = QRCodeGraphicsFactory())","description":"qrcode.raw.QRCodeProcessor","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/index.html","searchKeys":["QRCodeProcessor","class QRCodeProcessor constructor(data: String, errorCorrectionLevel: ErrorCorrectionLevel = ErrorCorrectionLevel.MEDIUM, dataType: QRCodeDataType = QRUtil.getDataType(data), val graphicsFactory: QRCodeGraphicsFactory = QRCodeGraphicsFactory())","qrcode.raw.QRCodeProcessor"]},{"name":"class QRCode constructor(val data: String, val squareSize: Int = DEFAULT_SQUARE_SIZE, val colorFn: QRCodeColorFunction = DefaultColorFunction(), val shapeFn: QRCodeShapeFunction = DefaultShapeFunction(squareSize, innerSpace = 0), var graphicsFactory: QRCodeGraphicsFactory = QRCodeGraphicsFactory(), errorCorrectionLevel: ErrorCorrectionLevel = ErrorCorrectionLevel.VERY_HIGH, minTypeNum: Int = 6, forceMinTypeNum: Boolean = false, doBefore: QRCode.(QRCodeGraphics, Int, Int) -> Unit = EMPTY_FN, doAfter: QRCode.(QRCodeGraphics, Int, Int) -> Unit = EMPTY_FN)","description":"qrcode.QRCode","location":"-q-r-code--kotlin/qrcode/-q-r-code/index.html","searchKeys":["QRCode","class QRCode constructor(val data: String, val squareSize: Int = DEFAULT_SQUARE_SIZE, val colorFn: QRCodeColorFunction = DefaultColorFunction(), val shapeFn: QRCodeShapeFunction = DefaultShapeFunction(squareSize, innerSpace = 0), var graphicsFactory: QRCodeGraphicsFactory = QRCodeGraphicsFactory(), errorCorrectionLevel: ErrorCorrectionLevel = ErrorCorrectionLevel.VERY_HIGH, minTypeNum: Int = 6, forceMinTypeNum: Boolean = false, doBefore: QRCode.(QRCodeGraphics, Int, Int) -> Unit = EMPTY_FN, doAfter: QRCode.(QRCodeGraphics, Int, Int) -> Unit = EMPTY_FN)","qrcode.QRCode"]},{"name":"const val ALICE_BLUE: Int","description":"qrcode.color.Colors.ALICE_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-a-l-i-c-e_-b-l-u-e.html","searchKeys":["ALICE_BLUE","const val ALICE_BLUE: Int","qrcode.color.Colors.ALICE_BLUE"]},{"name":"const val ANTIQUE_WHITE: Int","description":"qrcode.color.Colors.ANTIQUE_WHITE","location":"-q-r-code--kotlin/qrcode.color/-colors/-a-n-t-i-q-u-e_-w-h-i-t-e.html","searchKeys":["ANTIQUE_WHITE","const val ANTIQUE_WHITE: Int","qrcode.color.Colors.ANTIQUE_WHITE"]},{"name":"const val AQUA: Int","description":"qrcode.color.Colors.AQUA","location":"-q-r-code--kotlin/qrcode.color/-colors/-a-q-u-a.html","searchKeys":["AQUA","const val AQUA: Int","qrcode.color.Colors.AQUA"]},{"name":"const val AQUAMARINE: Int","description":"qrcode.color.Colors.AQUAMARINE","location":"-q-r-code--kotlin/qrcode.color/-colors/-a-q-u-a-m-a-r-i-n-e.html","searchKeys":["AQUAMARINE","const val AQUAMARINE: Int","qrcode.color.Colors.AQUAMARINE"]},{"name":"const val AZURE: Int","description":"qrcode.color.Colors.AZURE","location":"-q-r-code--kotlin/qrcode.color/-colors/-a-z-u-r-e.html","searchKeys":["AZURE","const val AZURE: Int","qrcode.color.Colors.AZURE"]},{"name":"const val BEIGE: Int","description":"qrcode.color.Colors.BEIGE","location":"-q-r-code--kotlin/qrcode.color/-colors/-b-e-i-g-e.html","searchKeys":["BEIGE","const val BEIGE: Int","qrcode.color.Colors.BEIGE"]},{"name":"const val BISQUE: Int","description":"qrcode.color.Colors.BISQUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-b-i-s-q-u-e.html","searchKeys":["BISQUE","const val BISQUE: Int","qrcode.color.Colors.BISQUE"]},{"name":"const val BLACK: Int","description":"qrcode.color.Colors.BLACK","location":"-q-r-code--kotlin/qrcode.color/-colors/-b-l-a-c-k.html","searchKeys":["BLACK","const val BLACK: Int","qrcode.color.Colors.BLACK"]},{"name":"const val BLANCHED_ALMOND: Int","description":"qrcode.color.Colors.BLANCHED_ALMOND","location":"-q-r-code--kotlin/qrcode.color/-colors/-b-l-a-n-c-h-e-d_-a-l-m-o-n-d.html","searchKeys":["BLANCHED_ALMOND","const val BLANCHED_ALMOND: Int","qrcode.color.Colors.BLANCHED_ALMOND"]},{"name":"const val BLUE: Int","description":"qrcode.color.Colors.BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-b-l-u-e.html","searchKeys":["BLUE","const val BLUE: Int","qrcode.color.Colors.BLUE"]},{"name":"const val BLUE_VIOLET: Int","description":"qrcode.color.Colors.BLUE_VIOLET","location":"-q-r-code--kotlin/qrcode.color/-colors/-b-l-u-e_-v-i-o-l-e-t.html","searchKeys":["BLUE_VIOLET","const val BLUE_VIOLET: Int","qrcode.color.Colors.BLUE_VIOLET"]},{"name":"const val BROWN: Int","description":"qrcode.color.Colors.BROWN","location":"-q-r-code--kotlin/qrcode.color/-colors/-b-r-o-w-n.html","searchKeys":["BROWN","const val BROWN: Int","qrcode.color.Colors.BROWN"]},{"name":"const val BURLY_WOOD: Int","description":"qrcode.color.Colors.BURLY_WOOD","location":"-q-r-code--kotlin/qrcode.color/-colors/-b-u-r-l-y_-w-o-o-d.html","searchKeys":["BURLY_WOOD","const val BURLY_WOOD: Int","qrcode.color.Colors.BURLY_WOOD"]},{"name":"const val CADET_BLUE: Int","description":"qrcode.color.Colors.CADET_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-c-a-d-e-t_-b-l-u-e.html","searchKeys":["CADET_BLUE","const val CADET_BLUE: Int","qrcode.color.Colors.CADET_BLUE"]},{"name":"const val CHARTREUSE: Int","description":"qrcode.color.Colors.CHARTREUSE","location":"-q-r-code--kotlin/qrcode.color/-colors/-c-h-a-r-t-r-e-u-s-e.html","searchKeys":["CHARTREUSE","const val CHARTREUSE: Int","qrcode.color.Colors.CHARTREUSE"]},{"name":"const val CHOCOLATE: Int","description":"qrcode.color.Colors.CHOCOLATE","location":"-q-r-code--kotlin/qrcode.color/-colors/-c-h-o-c-o-l-a-t-e.html","searchKeys":["CHOCOLATE","const val CHOCOLATE: Int","qrcode.color.Colors.CHOCOLATE"]},{"name":"const val CORAL: Int","description":"qrcode.color.Colors.CORAL","location":"-q-r-code--kotlin/qrcode.color/-colors/-c-o-r-a-l.html","searchKeys":["CORAL","const val CORAL: Int","qrcode.color.Colors.CORAL"]},{"name":"const val CORNFLOWER_BLUE: Int","description":"qrcode.color.Colors.CORNFLOWER_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-c-o-r-n-f-l-o-w-e-r_-b-l-u-e.html","searchKeys":["CORNFLOWER_BLUE","const val CORNFLOWER_BLUE: Int","qrcode.color.Colors.CORNFLOWER_BLUE"]},{"name":"const val CORNSILK: Int","description":"qrcode.color.Colors.CORNSILK","location":"-q-r-code--kotlin/qrcode.color/-colors/-c-o-r-n-s-i-l-k.html","searchKeys":["CORNSILK","const val CORNSILK: Int","qrcode.color.Colors.CORNSILK"]},{"name":"const val CRIMSON: Int","description":"qrcode.color.Colors.CRIMSON","location":"-q-r-code--kotlin/qrcode.color/-colors/-c-r-i-m-s-o-n.html","searchKeys":["CRIMSON","const val CRIMSON: Int","qrcode.color.Colors.CRIMSON"]},{"name":"const val CYAN: Int","description":"qrcode.color.Colors.CYAN","location":"-q-r-code--kotlin/qrcode.color/-colors/-c-y-a-n.html","searchKeys":["CYAN","const val CYAN: Int","qrcode.color.Colors.CYAN"]},{"name":"const val DARK_BLUE: Int","description":"qrcode.color.Colors.DARK_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-b-l-u-e.html","searchKeys":["DARK_BLUE","const val DARK_BLUE: Int","qrcode.color.Colors.DARK_BLUE"]},{"name":"const val DARK_CYAN: Int","description":"qrcode.color.Colors.DARK_CYAN","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-c-y-a-n.html","searchKeys":["DARK_CYAN","const val DARK_CYAN: Int","qrcode.color.Colors.DARK_CYAN"]},{"name":"const val DARK_GOLDEN_ROD: Int","description":"qrcode.color.Colors.DARK_GOLDEN_ROD","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-g-o-l-d-e-n_-r-o-d.html","searchKeys":["DARK_GOLDEN_ROD","const val DARK_GOLDEN_ROD: Int","qrcode.color.Colors.DARK_GOLDEN_ROD"]},{"name":"const val DARK_GRAY: Int","description":"qrcode.color.Colors.DARK_GRAY","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-g-r-a-y.html","searchKeys":["DARK_GRAY","const val DARK_GRAY: Int","qrcode.color.Colors.DARK_GRAY"]},{"name":"const val DARK_GREEN: Int","description":"qrcode.color.Colors.DARK_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-g-r-e-e-n.html","searchKeys":["DARK_GREEN","const val DARK_GREEN: Int","qrcode.color.Colors.DARK_GREEN"]},{"name":"const val DARK_GREY: Int","description":"qrcode.color.Colors.DARK_GREY","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-g-r-e-y.html","searchKeys":["DARK_GREY","const val DARK_GREY: Int","qrcode.color.Colors.DARK_GREY"]},{"name":"const val DARK_KHAKI: Int","description":"qrcode.color.Colors.DARK_KHAKI","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-k-h-a-k-i.html","searchKeys":["DARK_KHAKI","const val DARK_KHAKI: Int","qrcode.color.Colors.DARK_KHAKI"]},{"name":"const val DARK_MAGENTA: Int","description":"qrcode.color.Colors.DARK_MAGENTA","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-m-a-g-e-n-t-a.html","searchKeys":["DARK_MAGENTA","const val DARK_MAGENTA: Int","qrcode.color.Colors.DARK_MAGENTA"]},{"name":"const val DARK_OLIVE_GREEN: Int","description":"qrcode.color.Colors.DARK_OLIVE_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-o-l-i-v-e_-g-r-e-e-n.html","searchKeys":["DARK_OLIVE_GREEN","const val DARK_OLIVE_GREEN: Int","qrcode.color.Colors.DARK_OLIVE_GREEN"]},{"name":"const val DARK_ORANGE: Int","description":"qrcode.color.Colors.DARK_ORANGE","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-o-r-a-n-g-e.html","searchKeys":["DARK_ORANGE","const val DARK_ORANGE: Int","qrcode.color.Colors.DARK_ORANGE"]},{"name":"const val DARK_ORCHID: Int","description":"qrcode.color.Colors.DARK_ORCHID","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-o-r-c-h-i-d.html","searchKeys":["DARK_ORCHID","const val DARK_ORCHID: Int","qrcode.color.Colors.DARK_ORCHID"]},{"name":"const val DARK_RED: Int","description":"qrcode.color.Colors.DARK_RED","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-r-e-d.html","searchKeys":["DARK_RED","const val DARK_RED: Int","qrcode.color.Colors.DARK_RED"]},{"name":"const val DARK_SALMON: Int","description":"qrcode.color.Colors.DARK_SALMON","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-s-a-l-m-o-n.html","searchKeys":["DARK_SALMON","const val DARK_SALMON: Int","qrcode.color.Colors.DARK_SALMON"]},{"name":"const val DARK_SEA_GREEN: Int","description":"qrcode.color.Colors.DARK_SEA_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-s-e-a_-g-r-e-e-n.html","searchKeys":["DARK_SEA_GREEN","const val DARK_SEA_GREEN: Int","qrcode.color.Colors.DARK_SEA_GREEN"]},{"name":"const val DARK_SLATE_BLUE: Int","description":"qrcode.color.Colors.DARK_SLATE_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-s-l-a-t-e_-b-l-u-e.html","searchKeys":["DARK_SLATE_BLUE","const val DARK_SLATE_BLUE: Int","qrcode.color.Colors.DARK_SLATE_BLUE"]},{"name":"const val DARK_SLATE_GRAY: Int","description":"qrcode.color.Colors.DARK_SLATE_GRAY","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-s-l-a-t-e_-g-r-a-y.html","searchKeys":["DARK_SLATE_GRAY","const val DARK_SLATE_GRAY: Int","qrcode.color.Colors.DARK_SLATE_GRAY"]},{"name":"const val DARK_SLATE_GREY: Int","description":"qrcode.color.Colors.DARK_SLATE_GREY","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-s-l-a-t-e_-g-r-e-y.html","searchKeys":["DARK_SLATE_GREY","const val DARK_SLATE_GREY: Int","qrcode.color.Colors.DARK_SLATE_GREY"]},{"name":"const val DARK_TURQUOISE: Int","description":"qrcode.color.Colors.DARK_TURQUOISE","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-t-u-r-q-u-o-i-s-e.html","searchKeys":["DARK_TURQUOISE","const val DARK_TURQUOISE: Int","qrcode.color.Colors.DARK_TURQUOISE"]},{"name":"const val DARK_VIOLET: Int","description":"qrcode.color.Colors.DARK_VIOLET","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-a-r-k_-v-i-o-l-e-t.html","searchKeys":["DARK_VIOLET","const val DARK_VIOLET: Int","qrcode.color.Colors.DARK_VIOLET"]},{"name":"const val DEEP_PINK: Int","description":"qrcode.color.Colors.DEEP_PINK","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-e-e-p_-p-i-n-k.html","searchKeys":["DEEP_PINK","const val DEEP_PINK: Int","qrcode.color.Colors.DEEP_PINK"]},{"name":"const val DEEP_SKY_BLUE: Int","description":"qrcode.color.Colors.DEEP_SKY_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-e-e-p_-s-k-y_-b-l-u-e.html","searchKeys":["DEEP_SKY_BLUE","const val DEEP_SKY_BLUE: Int","qrcode.color.Colors.DEEP_SKY_BLUE"]},{"name":"const val DEFAULT_CELL_SIZE: Int = 25","description":"qrcode.raw.QRCodeProcessor.Companion.DEFAULT_CELL_SIZE","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/-companion/-d-e-f-a-u-l-t_-c-e-l-l_-s-i-z-e.html","searchKeys":["DEFAULT_CELL_SIZE","const val DEFAULT_CELL_SIZE: Int = 25","qrcode.raw.QRCodeProcessor.Companion.DEFAULT_CELL_SIZE"]},{"name":"const val DEFAULT_MARGIN: Int = 0","description":"qrcode.raw.QRCodeProcessor.Companion.DEFAULT_MARGIN","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/-companion/-d-e-f-a-u-l-t_-m-a-r-g-i-n.html","searchKeys":["DEFAULT_MARGIN","const val DEFAULT_MARGIN: Int = 0","qrcode.raw.QRCodeProcessor.Companion.DEFAULT_MARGIN"]},{"name":"const val DEFAULT_SQUARE_SIZE: Int","description":"qrcode.QRCode.Companion.DEFAULT_SQUARE_SIZE","location":"-q-r-code--kotlin/qrcode/-q-r-code/-companion/-d-e-f-a-u-l-t_-s-q-u-a-r-e_-s-i-z-e.html","searchKeys":["DEFAULT_SQUARE_SIZE","const val DEFAULT_SQUARE_SIZE: Int","qrcode.QRCode.Companion.DEFAULT_SQUARE_SIZE"]},{"name":"const val DIM_GRAY: Int","description":"qrcode.color.Colors.DIM_GRAY","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-i-m_-g-r-a-y.html","searchKeys":["DIM_GRAY","const val DIM_GRAY: Int","qrcode.color.Colors.DIM_GRAY"]},{"name":"const val DIM_GREY: Int","description":"qrcode.color.Colors.DIM_GREY","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-i-m_-g-r-e-y.html","searchKeys":["DIM_GREY","const val DIM_GREY: Int","qrcode.color.Colors.DIM_GREY"]},{"name":"const val DODGER_BLUE: Int","description":"qrcode.color.Colors.DODGER_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-d-o-d-g-e-r_-b-l-u-e.html","searchKeys":["DODGER_BLUE","const val DODGER_BLUE: Int","qrcode.color.Colors.DODGER_BLUE"]},{"name":"const val FIRE_BRICK: Int","description":"qrcode.color.Colors.FIRE_BRICK","location":"-q-r-code--kotlin/qrcode.color/-colors/-f-i-r-e_-b-r-i-c-k.html","searchKeys":["FIRE_BRICK","const val FIRE_BRICK: Int","qrcode.color.Colors.FIRE_BRICK"]},{"name":"const val FLORAL_WHITE: Int","description":"qrcode.color.Colors.FLORAL_WHITE","location":"-q-r-code--kotlin/qrcode.color/-colors/-f-l-o-r-a-l_-w-h-i-t-e.html","searchKeys":["FLORAL_WHITE","const val FLORAL_WHITE: Int","qrcode.color.Colors.FLORAL_WHITE"]},{"name":"const val FOREST_GREEN: Int","description":"qrcode.color.Colors.FOREST_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-f-o-r-e-s-t_-g-r-e-e-n.html","searchKeys":["FOREST_GREEN","const val FOREST_GREEN: Int","qrcode.color.Colors.FOREST_GREEN"]},{"name":"const val FUCHSIA: Int","description":"qrcode.color.Colors.FUCHSIA","location":"-q-r-code--kotlin/qrcode.color/-colors/-f-u-c-h-s-i-a.html","searchKeys":["FUCHSIA","const val FUCHSIA: Int","qrcode.color.Colors.FUCHSIA"]},{"name":"const val GAINSBORO: Int","description":"qrcode.color.Colors.GAINSBORO","location":"-q-r-code--kotlin/qrcode.color/-colors/-g-a-i-n-s-b-o-r-o.html","searchKeys":["GAINSBORO","const val GAINSBORO: Int","qrcode.color.Colors.GAINSBORO"]},{"name":"const val GHOST_WHITE: Int","description":"qrcode.color.Colors.GHOST_WHITE","location":"-q-r-code--kotlin/qrcode.color/-colors/-g-h-o-s-t_-w-h-i-t-e.html","searchKeys":["GHOST_WHITE","const val GHOST_WHITE: Int","qrcode.color.Colors.GHOST_WHITE"]},{"name":"const val GOLD: Int","description":"qrcode.color.Colors.GOLD","location":"-q-r-code--kotlin/qrcode.color/-colors/-g-o-l-d.html","searchKeys":["GOLD","const val GOLD: Int","qrcode.color.Colors.GOLD"]},{"name":"const val GOLDEN_ROD: Int","description":"qrcode.color.Colors.GOLDEN_ROD","location":"-q-r-code--kotlin/qrcode.color/-colors/-g-o-l-d-e-n_-r-o-d.html","searchKeys":["GOLDEN_ROD","const val GOLDEN_ROD: Int","qrcode.color.Colors.GOLDEN_ROD"]},{"name":"const val GRAY: Int","description":"qrcode.color.Colors.GRAY","location":"-q-r-code--kotlin/qrcode.color/-colors/-g-r-a-y.html","searchKeys":["GRAY","const val GRAY: Int","qrcode.color.Colors.GRAY"]},{"name":"const val GREEN: Int","description":"qrcode.color.Colors.GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-g-r-e-e-n.html","searchKeys":["GREEN","const val GREEN: Int","qrcode.color.Colors.GREEN"]},{"name":"const val GREEN_YELLOW: Int","description":"qrcode.color.Colors.GREEN_YELLOW","location":"-q-r-code--kotlin/qrcode.color/-colors/-g-r-e-e-n_-y-e-l-l-o-w.html","searchKeys":["GREEN_YELLOW","const val GREEN_YELLOW: Int","qrcode.color.Colors.GREEN_YELLOW"]},{"name":"const val GREY: Int","description":"qrcode.color.Colors.GREY","location":"-q-r-code--kotlin/qrcode.color/-colors/-g-r-e-y.html","searchKeys":["GREY","const val GREY: Int","qrcode.color.Colors.GREY"]},{"name":"const val HONEY_DEW: Int","description":"qrcode.color.Colors.HONEY_DEW","location":"-q-r-code--kotlin/qrcode.color/-colors/-h-o-n-e-y_-d-e-w.html","searchKeys":["HONEY_DEW","const val HONEY_DEW: Int","qrcode.color.Colors.HONEY_DEW"]},{"name":"const val HOT_PINK: Int","description":"qrcode.color.Colors.HOT_PINK","location":"-q-r-code--kotlin/qrcode.color/-colors/-h-o-t_-p-i-n-k.html","searchKeys":["HOT_PINK","const val HOT_PINK: Int","qrcode.color.Colors.HOT_PINK"]},{"name":"const val INDIAN_RED: Int","description":"qrcode.color.Colors.INDIAN_RED","location":"-q-r-code--kotlin/qrcode.color/-colors/-i-n-d-i-a-n_-r-e-d.html","searchKeys":["INDIAN_RED","const val INDIAN_RED: Int","qrcode.color.Colors.INDIAN_RED"]},{"name":"const val INDIGO: Int","description":"qrcode.color.Colors.INDIGO","location":"-q-r-code--kotlin/qrcode.color/-colors/-i-n-d-i-g-o.html","searchKeys":["INDIGO","const val INDIGO: Int","qrcode.color.Colors.INDIGO"]},{"name":"const val IVORY: Int","description":"qrcode.color.Colors.IVORY","location":"-q-r-code--kotlin/qrcode.color/-colors/-i-v-o-r-y.html","searchKeys":["IVORY","const val IVORY: Int","qrcode.color.Colors.IVORY"]},{"name":"const val KHAKI: Int","description":"qrcode.color.Colors.KHAKI","location":"-q-r-code--kotlin/qrcode.color/-colors/-k-h-a-k-i.html","searchKeys":["KHAKI","const val KHAKI: Int","qrcode.color.Colors.KHAKI"]},{"name":"const val LAVENDER: Int","description":"qrcode.color.Colors.LAVENDER","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-a-v-e-n-d-e-r.html","searchKeys":["LAVENDER","const val LAVENDER: Int","qrcode.color.Colors.LAVENDER"]},{"name":"const val LAVENDER_BLUSH: Int","description":"qrcode.color.Colors.LAVENDER_BLUSH","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-a-v-e-n-d-e-r_-b-l-u-s-h.html","searchKeys":["LAVENDER_BLUSH","const val LAVENDER_BLUSH: Int","qrcode.color.Colors.LAVENDER_BLUSH"]},{"name":"const val LAWN_GREEN: Int","description":"qrcode.color.Colors.LAWN_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-a-w-n_-g-r-e-e-n.html","searchKeys":["LAWN_GREEN","const val LAWN_GREEN: Int","qrcode.color.Colors.LAWN_GREEN"]},{"name":"const val LEMON_CHIFFON: Int","description":"qrcode.color.Colors.LEMON_CHIFFON","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-e-m-o-n_-c-h-i-f-f-o-n.html","searchKeys":["LEMON_CHIFFON","const val LEMON_CHIFFON: Int","qrcode.color.Colors.LEMON_CHIFFON"]},{"name":"const val LIGHT_BLUE: Int","description":"qrcode.color.Colors.LIGHT_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-b-l-u-e.html","searchKeys":["LIGHT_BLUE","const val LIGHT_BLUE: Int","qrcode.color.Colors.LIGHT_BLUE"]},{"name":"const val LIGHT_CORAL: Int","description":"qrcode.color.Colors.LIGHT_CORAL","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-c-o-r-a-l.html","searchKeys":["LIGHT_CORAL","const val LIGHT_CORAL: Int","qrcode.color.Colors.LIGHT_CORAL"]},{"name":"const val LIGHT_CYAN: Int","description":"qrcode.color.Colors.LIGHT_CYAN","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-c-y-a-n.html","searchKeys":["LIGHT_CYAN","const val LIGHT_CYAN: Int","qrcode.color.Colors.LIGHT_CYAN"]},{"name":"const val LIGHT_GOLDEN_ROD_YELLOW: Int","description":"qrcode.color.Colors.LIGHT_GOLDEN_ROD_YELLOW","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-g-o-l-d-e-n_-r-o-d_-y-e-l-l-o-w.html","searchKeys":["LIGHT_GOLDEN_ROD_YELLOW","const val LIGHT_GOLDEN_ROD_YELLOW: Int","qrcode.color.Colors.LIGHT_GOLDEN_ROD_YELLOW"]},{"name":"const val LIGHT_GRAY: Int","description":"qrcode.color.Colors.LIGHT_GRAY","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-g-r-a-y.html","searchKeys":["LIGHT_GRAY","const val LIGHT_GRAY: Int","qrcode.color.Colors.LIGHT_GRAY"]},{"name":"const val LIGHT_GREEN: Int","description":"qrcode.color.Colors.LIGHT_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-g-r-e-e-n.html","searchKeys":["LIGHT_GREEN","const val LIGHT_GREEN: Int","qrcode.color.Colors.LIGHT_GREEN"]},{"name":"const val LIGHT_GREY: Int","description":"qrcode.color.Colors.LIGHT_GREY","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-g-r-e-y.html","searchKeys":["LIGHT_GREY","const val LIGHT_GREY: Int","qrcode.color.Colors.LIGHT_GREY"]},{"name":"const val LIGHT_PINK: Int","description":"qrcode.color.Colors.LIGHT_PINK","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-p-i-n-k.html","searchKeys":["LIGHT_PINK","const val LIGHT_PINK: Int","qrcode.color.Colors.LIGHT_PINK"]},{"name":"const val LIGHT_SALMON: Int","description":"qrcode.color.Colors.LIGHT_SALMON","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-s-a-l-m-o-n.html","searchKeys":["LIGHT_SALMON","const val LIGHT_SALMON: Int","qrcode.color.Colors.LIGHT_SALMON"]},{"name":"const val LIGHT_SEA_GREEN: Int","description":"qrcode.color.Colors.LIGHT_SEA_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-s-e-a_-g-r-e-e-n.html","searchKeys":["LIGHT_SEA_GREEN","const val LIGHT_SEA_GREEN: Int","qrcode.color.Colors.LIGHT_SEA_GREEN"]},{"name":"const val LIGHT_SKY_BLUE: Int","description":"qrcode.color.Colors.LIGHT_SKY_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-s-k-y_-b-l-u-e.html","searchKeys":["LIGHT_SKY_BLUE","const val LIGHT_SKY_BLUE: Int","qrcode.color.Colors.LIGHT_SKY_BLUE"]},{"name":"const val LIGHT_SLATE_GRAY: Int","description":"qrcode.color.Colors.LIGHT_SLATE_GRAY","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-s-l-a-t-e_-g-r-a-y.html","searchKeys":["LIGHT_SLATE_GRAY","const val LIGHT_SLATE_GRAY: Int","qrcode.color.Colors.LIGHT_SLATE_GRAY"]},{"name":"const val LIGHT_SLATE_GREY: Int","description":"qrcode.color.Colors.LIGHT_SLATE_GREY","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-s-l-a-t-e_-g-r-e-y.html","searchKeys":["LIGHT_SLATE_GREY","const val LIGHT_SLATE_GREY: Int","qrcode.color.Colors.LIGHT_SLATE_GREY"]},{"name":"const val LIGHT_STEEL_BLUE: Int","description":"qrcode.color.Colors.LIGHT_STEEL_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-s-t-e-e-l_-b-l-u-e.html","searchKeys":["LIGHT_STEEL_BLUE","const val LIGHT_STEEL_BLUE: Int","qrcode.color.Colors.LIGHT_STEEL_BLUE"]},{"name":"const val LIGHT_YELLOW: Int","description":"qrcode.color.Colors.LIGHT_YELLOW","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-g-h-t_-y-e-l-l-o-w.html","searchKeys":["LIGHT_YELLOW","const val LIGHT_YELLOW: Int","qrcode.color.Colors.LIGHT_YELLOW"]},{"name":"const val LIME: Int","description":"qrcode.color.Colors.LIME","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-m-e.html","searchKeys":["LIME","const val LIME: Int","qrcode.color.Colors.LIME"]},{"name":"const val LIME_GREEN: Int","description":"qrcode.color.Colors.LIME_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-m-e_-g-r-e-e-n.html","searchKeys":["LIME_GREEN","const val LIME_GREEN: Int","qrcode.color.Colors.LIME_GREEN"]},{"name":"const val LINEN: Int","description":"qrcode.color.Colors.LINEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-l-i-n-e-n.html","searchKeys":["LINEN","const val LINEN: Int","qrcode.color.Colors.LINEN"]},{"name":"const val MAGENTA: Int","description":"qrcode.color.Colors.MAGENTA","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-a-g-e-n-t-a.html","searchKeys":["MAGENTA","const val MAGENTA: Int","qrcode.color.Colors.MAGENTA"]},{"name":"const val MAROON: Int","description":"qrcode.color.Colors.MAROON","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-a-r-o-o-n.html","searchKeys":["MAROON","const val MAROON: Int","qrcode.color.Colors.MAROON"]},{"name":"const val MEDIUM_AQUA_MARINE: Int","description":"qrcode.color.Colors.MEDIUM_AQUA_MARINE","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-e-d-i-u-m_-a-q-u-a_-m-a-r-i-n-e.html","searchKeys":["MEDIUM_AQUA_MARINE","const val MEDIUM_AQUA_MARINE: Int","qrcode.color.Colors.MEDIUM_AQUA_MARINE"]},{"name":"const val MEDIUM_BLUE: Int","description":"qrcode.color.Colors.MEDIUM_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-e-d-i-u-m_-b-l-u-e.html","searchKeys":["MEDIUM_BLUE","const val MEDIUM_BLUE: Int","qrcode.color.Colors.MEDIUM_BLUE"]},{"name":"const val MEDIUM_ORCHID: Int","description":"qrcode.color.Colors.MEDIUM_ORCHID","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-e-d-i-u-m_-o-r-c-h-i-d.html","searchKeys":["MEDIUM_ORCHID","const val MEDIUM_ORCHID: Int","qrcode.color.Colors.MEDIUM_ORCHID"]},{"name":"const val MEDIUM_PURPLE: Int","description":"qrcode.color.Colors.MEDIUM_PURPLE","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-e-d-i-u-m_-p-u-r-p-l-e.html","searchKeys":["MEDIUM_PURPLE","const val MEDIUM_PURPLE: Int","qrcode.color.Colors.MEDIUM_PURPLE"]},{"name":"const val MEDIUM_SEA_GREEN: Int","description":"qrcode.color.Colors.MEDIUM_SEA_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-e-d-i-u-m_-s-e-a_-g-r-e-e-n.html","searchKeys":["MEDIUM_SEA_GREEN","const val MEDIUM_SEA_GREEN: Int","qrcode.color.Colors.MEDIUM_SEA_GREEN"]},{"name":"const val MEDIUM_SLATE_BLUE: Int","description":"qrcode.color.Colors.MEDIUM_SLATE_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-e-d-i-u-m_-s-l-a-t-e_-b-l-u-e.html","searchKeys":["MEDIUM_SLATE_BLUE","const val MEDIUM_SLATE_BLUE: Int","qrcode.color.Colors.MEDIUM_SLATE_BLUE"]},{"name":"const val MEDIUM_SPRING_GREEN: Int","description":"qrcode.color.Colors.MEDIUM_SPRING_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-e-d-i-u-m_-s-p-r-i-n-g_-g-r-e-e-n.html","searchKeys":["MEDIUM_SPRING_GREEN","const val MEDIUM_SPRING_GREEN: Int","qrcode.color.Colors.MEDIUM_SPRING_GREEN"]},{"name":"const val MEDIUM_TURQUOISE: Int","description":"qrcode.color.Colors.MEDIUM_TURQUOISE","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-e-d-i-u-m_-t-u-r-q-u-o-i-s-e.html","searchKeys":["MEDIUM_TURQUOISE","const val MEDIUM_TURQUOISE: Int","qrcode.color.Colors.MEDIUM_TURQUOISE"]},{"name":"const val MEDIUM_VIOLET_RED: Int","description":"qrcode.color.Colors.MEDIUM_VIOLET_RED","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-e-d-i-u-m_-v-i-o-l-e-t_-r-e-d.html","searchKeys":["MEDIUM_VIOLET_RED","const val MEDIUM_VIOLET_RED: Int","qrcode.color.Colors.MEDIUM_VIOLET_RED"]},{"name":"const val MIDNIGHT_BLUE: Int","description":"qrcode.color.Colors.MIDNIGHT_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-i-d-n-i-g-h-t_-b-l-u-e.html","searchKeys":["MIDNIGHT_BLUE","const val MIDNIGHT_BLUE: Int","qrcode.color.Colors.MIDNIGHT_BLUE"]},{"name":"const val MINT_CREAM: Int","description":"qrcode.color.Colors.MINT_CREAM","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-i-n-t_-c-r-e-a-m.html","searchKeys":["MINT_CREAM","const val MINT_CREAM: Int","qrcode.color.Colors.MINT_CREAM"]},{"name":"const val MISTY_ROSE: Int","description":"qrcode.color.Colors.MISTY_ROSE","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-i-s-t-y_-r-o-s-e.html","searchKeys":["MISTY_ROSE","const val MISTY_ROSE: Int","qrcode.color.Colors.MISTY_ROSE"]},{"name":"const val MOCCASIN: Int","description":"qrcode.color.Colors.MOCCASIN","location":"-q-r-code--kotlin/qrcode.color/-colors/-m-o-c-c-a-s-i-n.html","searchKeys":["MOCCASIN","const val MOCCASIN: Int","qrcode.color.Colors.MOCCASIN"]},{"name":"const val NAVAJO_WHITE: Int","description":"qrcode.color.Colors.NAVAJO_WHITE","location":"-q-r-code--kotlin/qrcode.color/-colors/-n-a-v-a-j-o_-w-h-i-t-e.html","searchKeys":["NAVAJO_WHITE","const val NAVAJO_WHITE: Int","qrcode.color.Colors.NAVAJO_WHITE"]},{"name":"const val NAVY: Int","description":"qrcode.color.Colors.NAVY","location":"-q-r-code--kotlin/qrcode.color/-colors/-n-a-v-y.html","searchKeys":["NAVY","const val NAVY: Int","qrcode.color.Colors.NAVY"]},{"name":"const val OLD_LACE: Int","description":"qrcode.color.Colors.OLD_LACE","location":"-q-r-code--kotlin/qrcode.color/-colors/-o-l-d_-l-a-c-e.html","searchKeys":["OLD_LACE","const val OLD_LACE: Int","qrcode.color.Colors.OLD_LACE"]},{"name":"const val OLIVE: Int","description":"qrcode.color.Colors.OLIVE","location":"-q-r-code--kotlin/qrcode.color/-colors/-o-l-i-v-e.html","searchKeys":["OLIVE","const val OLIVE: Int","qrcode.color.Colors.OLIVE"]},{"name":"const val OLIVE_DRAB: Int","description":"qrcode.color.Colors.OLIVE_DRAB","location":"-q-r-code--kotlin/qrcode.color/-colors/-o-l-i-v-e_-d-r-a-b.html","searchKeys":["OLIVE_DRAB","const val OLIVE_DRAB: Int","qrcode.color.Colors.OLIVE_DRAB"]},{"name":"const val ORANGE: Int","description":"qrcode.color.Colors.ORANGE","location":"-q-r-code--kotlin/qrcode.color/-colors/-o-r-a-n-g-e.html","searchKeys":["ORANGE","const val ORANGE: Int","qrcode.color.Colors.ORANGE"]},{"name":"const val ORANGE_RED: Int","description":"qrcode.color.Colors.ORANGE_RED","location":"-q-r-code--kotlin/qrcode.color/-colors/-o-r-a-n-g-e_-r-e-d.html","searchKeys":["ORANGE_RED","const val ORANGE_RED: Int","qrcode.color.Colors.ORANGE_RED"]},{"name":"const val ORCHID: Int","description":"qrcode.color.Colors.ORCHID","location":"-q-r-code--kotlin/qrcode.color/-colors/-o-r-c-h-i-d.html","searchKeys":["ORCHID","const val ORCHID: Int","qrcode.color.Colors.ORCHID"]},{"name":"const val PALE_GOLDEN_ROD: Int","description":"qrcode.color.Colors.PALE_GOLDEN_ROD","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-a-l-e_-g-o-l-d-e-n_-r-o-d.html","searchKeys":["PALE_GOLDEN_ROD","const val PALE_GOLDEN_ROD: Int","qrcode.color.Colors.PALE_GOLDEN_ROD"]},{"name":"const val PALE_GREEN: Int","description":"qrcode.color.Colors.PALE_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-a-l-e_-g-r-e-e-n.html","searchKeys":["PALE_GREEN","const val PALE_GREEN: Int","qrcode.color.Colors.PALE_GREEN"]},{"name":"const val PALE_TURQUOISE: Int","description":"qrcode.color.Colors.PALE_TURQUOISE","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-a-l-e_-t-u-r-q-u-o-i-s-e.html","searchKeys":["PALE_TURQUOISE","const val PALE_TURQUOISE: Int","qrcode.color.Colors.PALE_TURQUOISE"]},{"name":"const val PALE_VIOLET_RED: Int","description":"qrcode.color.Colors.PALE_VIOLET_RED","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-a-l-e_-v-i-o-l-e-t_-r-e-d.html","searchKeys":["PALE_VIOLET_RED","const val PALE_VIOLET_RED: Int","qrcode.color.Colors.PALE_VIOLET_RED"]},{"name":"const val PAPAYA_WHIP: Int","description":"qrcode.color.Colors.PAPAYA_WHIP","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-a-p-a-y-a_-w-h-i-p.html","searchKeys":["PAPAYA_WHIP","const val PAPAYA_WHIP: Int","qrcode.color.Colors.PAPAYA_WHIP"]},{"name":"const val PEACH_PUFF: Int","description":"qrcode.color.Colors.PEACH_PUFF","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-e-a-c-h_-p-u-f-f.html","searchKeys":["PEACH_PUFF","const val PEACH_PUFF: Int","qrcode.color.Colors.PEACH_PUFF"]},{"name":"const val PERU: Int","description":"qrcode.color.Colors.PERU","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-e-r-u.html","searchKeys":["PERU","const val PERU: Int","qrcode.color.Colors.PERU"]},{"name":"const val PINK: Int","description":"qrcode.color.Colors.PINK","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-i-n-k.html","searchKeys":["PINK","const val PINK: Int","qrcode.color.Colors.PINK"]},{"name":"const val PLUM: Int","description":"qrcode.color.Colors.PLUM","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-l-u-m.html","searchKeys":["PLUM","const val PLUM: Int","qrcode.color.Colors.PLUM"]},{"name":"const val POWDER_BLUE: Int","description":"qrcode.color.Colors.POWDER_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-o-w-d-e-r_-b-l-u-e.html","searchKeys":["POWDER_BLUE","const val POWDER_BLUE: Int","qrcode.color.Colors.POWDER_BLUE"]},{"name":"const val PURPLE: Int","description":"qrcode.color.Colors.PURPLE","location":"-q-r-code--kotlin/qrcode.color/-colors/-p-u-r-p-l-e.html","searchKeys":["PURPLE","const val PURPLE: Int","qrcode.color.Colors.PURPLE"]},{"name":"const val REBECCA_PURPLE: Int","description":"qrcode.color.Colors.REBECCA_PURPLE","location":"-q-r-code--kotlin/qrcode.color/-colors/-r-e-b-e-c-c-a_-p-u-r-p-l-e.html","searchKeys":["REBECCA_PURPLE","const val REBECCA_PURPLE: Int","qrcode.color.Colors.REBECCA_PURPLE"]},{"name":"const val RED: Int","description":"qrcode.color.Colors.RED","location":"-q-r-code--kotlin/qrcode.color/-colors/-r-e-d.html","searchKeys":["RED","const val RED: Int","qrcode.color.Colors.RED"]},{"name":"const val ROSY_BROWN: Int","description":"qrcode.color.Colors.ROSY_BROWN","location":"-q-r-code--kotlin/qrcode.color/-colors/-r-o-s-y_-b-r-o-w-n.html","searchKeys":["ROSY_BROWN","const val ROSY_BROWN: Int","qrcode.color.Colors.ROSY_BROWN"]},{"name":"const val ROYAL_BLUE: Int","description":"qrcode.color.Colors.ROYAL_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-r-o-y-a-l_-b-l-u-e.html","searchKeys":["ROYAL_BLUE","const val ROYAL_BLUE: Int","qrcode.color.Colors.ROYAL_BLUE"]},{"name":"const val SADDLE_BROWN: Int","description":"qrcode.color.Colors.SADDLE_BROWN","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-a-d-d-l-e_-b-r-o-w-n.html","searchKeys":["SADDLE_BROWN","const val SADDLE_BROWN: Int","qrcode.color.Colors.SADDLE_BROWN"]},{"name":"const val SALMON: Int","description":"qrcode.color.Colors.SALMON","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-a-l-m-o-n.html","searchKeys":["SALMON","const val SALMON: Int","qrcode.color.Colors.SALMON"]},{"name":"const val SANDY_BROWN: Int","description":"qrcode.color.Colors.SANDY_BROWN","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-a-n-d-y_-b-r-o-w-n.html","searchKeys":["SANDY_BROWN","const val SANDY_BROWN: Int","qrcode.color.Colors.SANDY_BROWN"]},{"name":"const val SEA_GREEN: Int","description":"qrcode.color.Colors.SEA_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-e-a_-g-r-e-e-n.html","searchKeys":["SEA_GREEN","const val SEA_GREEN: Int","qrcode.color.Colors.SEA_GREEN"]},{"name":"const val SEA_SHELL: Int","description":"qrcode.color.Colors.SEA_SHELL","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-e-a_-s-h-e-l-l.html","searchKeys":["SEA_SHELL","const val SEA_SHELL: Int","qrcode.color.Colors.SEA_SHELL"]},{"name":"const val SIENNA: Int","description":"qrcode.color.Colors.SIENNA","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-i-e-n-n-a.html","searchKeys":["SIENNA","const val SIENNA: Int","qrcode.color.Colors.SIENNA"]},{"name":"const val SILVER: Int","description":"qrcode.color.Colors.SILVER","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-i-l-v-e-r.html","searchKeys":["SILVER","const val SILVER: Int","qrcode.color.Colors.SILVER"]},{"name":"const val SKY_BLUE: Int","description":"qrcode.color.Colors.SKY_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-k-y_-b-l-u-e.html","searchKeys":["SKY_BLUE","const val SKY_BLUE: Int","qrcode.color.Colors.SKY_BLUE"]},{"name":"const val SLATE_BLUE: Int","description":"qrcode.color.Colors.SLATE_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-l-a-t-e_-b-l-u-e.html","searchKeys":["SLATE_BLUE","const val SLATE_BLUE: Int","qrcode.color.Colors.SLATE_BLUE"]},{"name":"const val SLATE_GRAY: Int","description":"qrcode.color.Colors.SLATE_GRAY","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-l-a-t-e_-g-r-a-y.html","searchKeys":["SLATE_GRAY","const val SLATE_GRAY: Int","qrcode.color.Colors.SLATE_GRAY"]},{"name":"const val SLATE_GREY: Int","description":"qrcode.color.Colors.SLATE_GREY","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-l-a-t-e_-g-r-e-y.html","searchKeys":["SLATE_GREY","const val SLATE_GREY: Int","qrcode.color.Colors.SLATE_GREY"]},{"name":"const val SNOW: Int","description":"qrcode.color.Colors.SNOW","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-n-o-w.html","searchKeys":["SNOW","const val SNOW: Int","qrcode.color.Colors.SNOW"]},{"name":"const val SPRING_GREEN: Int","description":"qrcode.color.Colors.SPRING_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-p-r-i-n-g_-g-r-e-e-n.html","searchKeys":["SPRING_GREEN","const val SPRING_GREEN: Int","qrcode.color.Colors.SPRING_GREEN"]},{"name":"const val STEEL_BLUE: Int","description":"qrcode.color.Colors.STEEL_BLUE","location":"-q-r-code--kotlin/qrcode.color/-colors/-s-t-e-e-l_-b-l-u-e.html","searchKeys":["STEEL_BLUE","const val STEEL_BLUE: Int","qrcode.color.Colors.STEEL_BLUE"]},{"name":"const val TAN: Int","description":"qrcode.color.Colors.TAN","location":"-q-r-code--kotlin/qrcode.color/-colors/-t-a-n.html","searchKeys":["TAN","const val TAN: Int","qrcode.color.Colors.TAN"]},{"name":"const val TEAL: Int","description":"qrcode.color.Colors.TEAL","location":"-q-r-code--kotlin/qrcode.color/-colors/-t-e-a-l.html","searchKeys":["TEAL","const val TEAL: Int","qrcode.color.Colors.TEAL"]},{"name":"const val THISTLE: Int","description":"qrcode.color.Colors.THISTLE","location":"-q-r-code--kotlin/qrcode.color/-colors/-t-h-i-s-t-l-e.html","searchKeys":["THISTLE","const val THISTLE: Int","qrcode.color.Colors.THISTLE"]},{"name":"const val TOMATO: Int","description":"qrcode.color.Colors.TOMATO","location":"-q-r-code--kotlin/qrcode.color/-colors/-t-o-m-a-t-o.html","searchKeys":["TOMATO","const val TOMATO: Int","qrcode.color.Colors.TOMATO"]},{"name":"const val TRANSPARENT: Int = 0","description":"qrcode.color.Colors.TRANSPARENT","location":"-q-r-code--kotlin/qrcode.color/-colors/-t-r-a-n-s-p-a-r-e-n-t.html","searchKeys":["TRANSPARENT","const val TRANSPARENT: Int = 0","qrcode.color.Colors.TRANSPARENT"]},{"name":"const val TURQUOISE: Int","description":"qrcode.color.Colors.TURQUOISE","location":"-q-r-code--kotlin/qrcode.color/-colors/-t-u-r-q-u-o-i-s-e.html","searchKeys":["TURQUOISE","const val TURQUOISE: Int","qrcode.color.Colors.TURQUOISE"]},{"name":"const val VIOLET: Int","description":"qrcode.color.Colors.VIOLET","location":"-q-r-code--kotlin/qrcode.color/-colors/-v-i-o-l-e-t.html","searchKeys":["VIOLET","const val VIOLET: Int","qrcode.color.Colors.VIOLET"]},{"name":"const val WHEAT: Int","description":"qrcode.color.Colors.WHEAT","location":"-q-r-code--kotlin/qrcode.color/-colors/-w-h-e-a-t.html","searchKeys":["WHEAT","const val WHEAT: Int","qrcode.color.Colors.WHEAT"]},{"name":"const val WHITE: Int","description":"qrcode.color.Colors.WHITE","location":"-q-r-code--kotlin/qrcode.color/-colors/-w-h-i-t-e.html","searchKeys":["WHITE","const val WHITE: Int","qrcode.color.Colors.WHITE"]},{"name":"const val WHITE_SMOKE: Int","description":"qrcode.color.Colors.WHITE_SMOKE","location":"-q-r-code--kotlin/qrcode.color/-colors/-w-h-i-t-e_-s-m-o-k-e.html","searchKeys":["WHITE_SMOKE","const val WHITE_SMOKE: Int","qrcode.color.Colors.WHITE_SMOKE"]},{"name":"const val YELLOW: Int","description":"qrcode.color.Colors.YELLOW","location":"-q-r-code--kotlin/qrcode.color/-colors/-y-e-l-l-o-w.html","searchKeys":["YELLOW","const val YELLOW: Int","qrcode.color.Colors.YELLOW"]},{"name":"const val YELLOW_GREEN: Int","description":"qrcode.color.Colors.YELLOW_GREEN","location":"-q-r-code--kotlin/qrcode.color/-colors/-y-e-l-l-o-w_-g-r-e-e-n.html","searchKeys":["YELLOW_GREEN","const val YELLOW_GREEN: Int","qrcode.color.Colors.YELLOW_GREEN"]},{"name":"constructor()","description":"qrcode.render.QRCodeGraphicsFactory.QRCodeGraphicsFactory","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics-factory/-q-r-code-graphics-factory.html","searchKeys":["QRCodeGraphicsFactory","constructor()","qrcode.render.QRCodeGraphicsFactory.QRCodeGraphicsFactory"]},{"name":"constructor(dark: Boolean, row: Int, col: Int, moduleSize: Int, squareInfo: QRCodeSquareInfo = QRCodeSquareInfo(DEFAULT, UNKNOWN), rowSize: Int = 1, colSize: Int = 1, parent: QRCodeSquare? = null)","description":"qrcode.internals.QRCodeSquare.QRCodeSquare","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/-q-r-code-square.html","searchKeys":["QRCodeSquare","constructor(dark: Boolean, row: Int, col: Int, moduleSize: Int, squareInfo: QRCodeSquareInfo = QRCodeSquareInfo(DEFAULT, UNKNOWN), rowSize: Int = 1, colSize: Int = 1, parent: QRCodeSquare? = null)","qrcode.internals.QRCodeSquare.QRCodeSquare"]},{"name":"constructor(data: String, errorCorrectionLevel: ErrorCorrectionLevel = ErrorCorrectionLevel.MEDIUM, dataType: QRCodeDataType = QRUtil.getDataType(data), graphicsFactory: QRCodeGraphicsFactory = QRCodeGraphicsFactory())","description":"qrcode.raw.QRCodeProcessor.QRCodeProcessor","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/-q-r-code-processor.html","searchKeys":["QRCodeProcessor","constructor(data: String, errorCorrectionLevel: ErrorCorrectionLevel = ErrorCorrectionLevel.MEDIUM, dataType: QRCodeDataType = QRUtil.getDataType(data), graphicsFactory: QRCodeGraphicsFactory = QRCodeGraphicsFactory())","qrcode.raw.QRCodeProcessor.QRCodeProcessor"]},{"name":"constructor(data: String, squareSize: Int = DEFAULT_SQUARE_SIZE, colorFn: QRCodeColorFunction = DefaultColorFunction(), shapeFn: QRCodeShapeFunction = DefaultShapeFunction(squareSize, innerSpace = 0), graphicsFactory: QRCodeGraphicsFactory = QRCodeGraphicsFactory(), errorCorrectionLevel: ErrorCorrectionLevel = ErrorCorrectionLevel.VERY_HIGH, minTypeNum: Int = 6, forceMinTypeNum: Boolean = false, doBefore: QRCode.(QRCodeGraphics, Int, Int) -> Unit = EMPTY_FN, doAfter: QRCode.(QRCodeGraphics, Int, Int) -> Unit = EMPTY_FN)","description":"qrcode.QRCode.QRCode","location":"-q-r-code--kotlin/qrcode/-q-r-code/-q-r-code.html","searchKeys":["QRCode","constructor(data: String, squareSize: Int = DEFAULT_SQUARE_SIZE, colorFn: QRCodeColorFunction = DefaultColorFunction(), shapeFn: QRCodeShapeFunction = DefaultShapeFunction(squareSize, innerSpace = 0), graphicsFactory: QRCodeGraphicsFactory = QRCodeGraphicsFactory(), errorCorrectionLevel: ErrorCorrectionLevel = ErrorCorrectionLevel.VERY_HIGH, minTypeNum: Int = 6, forceMinTypeNum: Boolean = false, doBefore: QRCode.(QRCodeGraphics, Int, Int) -> Unit = EMPTY_FN, doAfter: QRCode.(QRCodeGraphics, Int, Int) -> Unit = EMPTY_FN)","qrcode.QRCode.QRCode"]},{"name":"constructor(foreground: Int = Colors.BLACK, background: Int = Colors.WHITE)","description":"qrcode.color.DefaultColorFunction.DefaultColorFunction","location":"-q-r-code--kotlin/qrcode.color/-default-color-function/-default-color-function.html","searchKeys":["DefaultColorFunction","constructor(foreground: Int = Colors.BLACK, background: Int = Colors.WHITE)","qrcode.color.DefaultColorFunction.DefaultColorFunction"]},{"name":"constructor(shape: QRCodeShapesEnum, customShapeFunction: QRCodeShapeFunction? = null)","description":"qrcode.QRCodeBuilder.QRCodeBuilder","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/-q-r-code-builder.html","searchKeys":["QRCodeBuilder","constructor(shape: QRCodeShapesEnum, customShapeFunction: QRCodeShapeFunction? = null)","qrcode.QRCodeBuilder.QRCodeBuilder"]},{"name":"constructor(squareSize: Int = DEFAULT_CELL_SIZE, innerSpace: Int = 1)","description":"qrcode.shape.DefaultShapeFunction.DefaultShapeFunction","location":"-q-r-code--kotlin/qrcode.shape/-default-shape-function/-default-shape-function.html","searchKeys":["DefaultShapeFunction","constructor(squareSize: Int = DEFAULT_CELL_SIZE, innerSpace: Int = 1)","qrcode.shape.DefaultShapeFunction.DefaultShapeFunction"]},{"name":"constructor(squareSize: Int = DEFAULT_CELL_SIZE, innerSpace: Int = defaultInnerSpace(squareSize))","description":"qrcode.shape.CircleShapeFunction.CircleShapeFunction","location":"-q-r-code--kotlin/qrcode.shape/-circle-shape-function/-circle-shape-function.html","searchKeys":["CircleShapeFunction","constructor(squareSize: Int = DEFAULT_CELL_SIZE, innerSpace: Int = defaultInnerSpace(squareSize))","qrcode.shape.CircleShapeFunction.CircleShapeFunction"]},{"name":"constructor(squareSize: Int = DEFAULT_CELL_SIZE, radius: Int = defaultRadius(squareSize), innerSpace: Int = defaultInnerSpace(squareSize))","description":"qrcode.shape.RoundSquaresShapeFunction.RoundSquaresShapeFunction","location":"-q-r-code--kotlin/qrcode.shape/-round-squares-shape-function/-round-squares-shape-function.html","searchKeys":["RoundSquaresShapeFunction","constructor(squareSize: Int = DEFAULT_CELL_SIZE, radius: Int = defaultRadius(squareSize), innerSpace: Int = defaultInnerSpace(squareSize))","qrcode.shape.RoundSquaresShapeFunction.RoundSquaresShapeFunction"]},{"name":"constructor(startForegroundColor: Int, endForegroundColor: Int, backgroundColor: Int = Colors.WHITE, vertical: Boolean = true)","description":"qrcode.color.LinearGradientColorFunction.LinearGradientColorFunction","location":"-q-r-code--kotlin/qrcode.color/-linear-gradient-color-function/-linear-gradient-color-function.html","searchKeys":["LinearGradientColorFunction","constructor(startForegroundColor: Int, endForegroundColor: Int, backgroundColor: Int = Colors.WHITE, vertical: Boolean = true)","qrcode.color.LinearGradientColorFunction.LinearGradientColorFunction"]},{"name":"constructor(type: QRCodeSquareType, region: QRCodeRegion)","description":"qrcode.internals.QRCodeSquareInfo.QRCodeSquareInfo","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-info/-q-r-code-square-info.html","searchKeys":["QRCodeSquareInfo","constructor(type: QRCodeSquareType, region: QRCodeRegion)","qrcode.internals.QRCodeSquareInfo.QRCodeSquareInfo"]},{"name":"data class QRCodeSquare(var dark: Boolean, val row: Int, val col: Int, val moduleSize: Int, val squareInfo: QRCodeSquareInfo = QRCodeSquareInfo(DEFAULT, UNKNOWN), val rowSize: Int = 1, val colSize: Int = 1, val parent: QRCodeSquare? = null)","description":"qrcode.internals.QRCodeSquare","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/index.html","searchKeys":["QRCodeSquare","data class QRCodeSquare(var dark: Boolean, val row: Int, val col: Int, val moduleSize: Int, val squareInfo: QRCodeSquareInfo = QRCodeSquareInfo(DEFAULT, UNKNOWN), val rowSize: Int = 1, val colSize: Int = 1, val parent: QRCodeSquare? = null)","qrcode.internals.QRCodeSquare"]},{"name":"data class QRCodeSquareInfo(val type: QRCodeSquareType, val region: QRCodeRegion)","description":"qrcode.internals.QRCodeSquareInfo","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-info/index.html","searchKeys":["QRCodeSquareInfo","data class QRCodeSquareInfo(val type: QRCodeSquareType, val region: QRCodeRegion)","qrcode.internals.QRCodeSquareInfo"]},{"name":"enum ErrorCorrectionLevel : Enum<ErrorCorrectionLevel> ","description":"qrcode.raw.ErrorCorrectionLevel","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/index.html","searchKeys":["ErrorCorrectionLevel","enum ErrorCorrectionLevel : Enum<ErrorCorrectionLevel> ","qrcode.raw.ErrorCorrectionLevel"]},{"name":"enum MaskPattern : Enum<MaskPattern> ","description":"qrcode.raw.MaskPattern","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/index.html","searchKeys":["MaskPattern","enum MaskPattern : Enum<MaskPattern> ","qrcode.raw.MaskPattern"]},{"name":"enum QRCodeDataType : Enum<QRCodeDataType> ","description":"qrcode.raw.QRCodeDataType","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-data-type/index.html","searchKeys":["QRCodeDataType","enum QRCodeDataType : Enum<QRCodeDataType> ","qrcode.raw.QRCodeDataType"]},{"name":"enum QRCodeRegion : Enum<QRCodeRegion> ","description":"qrcode.internals.QRCodeRegion","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/index.html","searchKeys":["QRCodeRegion","enum QRCodeRegion : Enum<QRCodeRegion> ","qrcode.internals.QRCodeRegion"]},{"name":"enum QRCodeShapesEnum : Enum<QRCodeShapesEnum> ","description":"qrcode.QRCodeShapesEnum","location":"-q-r-code--kotlin/qrcode/-q-r-code-shapes-enum/index.html","searchKeys":["QRCodeShapesEnum","enum QRCodeShapesEnum : Enum<QRCodeShapesEnum> ","qrcode.QRCodeShapesEnum"]},{"name":"enum QRCodeSquareType : Enum<QRCodeSquareType> ","description":"qrcode.internals.QRCodeSquareType","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-type/index.html","searchKeys":["QRCodeSquareType","enum QRCodeSquareType : Enum<QRCodeSquareType> ","qrcode.internals.QRCodeSquareType"]},{"name":"expect class QRCodeGraphics(width: Int, height: Int)","description":"qrcode.render.QRCodeGraphics","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/index.html","searchKeys":["QRCodeGraphics","expect class QRCodeGraphics(width: Int, height: Int)","qrcode.render.QRCodeGraphics"]},{"name":"expect constructor(width: Int, height: Int)","description":"qrcode.render.QRCodeGraphics.QRCodeGraphics","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/-q-r-code-graphics.html","searchKeys":["QRCodeGraphics","expect constructor(width: Int, height: Int)","qrcode.render.QRCodeGraphics.QRCodeGraphics"]},{"name":"expect fun availableFormats(): Array<String>","description":"qrcode.render.QRCodeGraphics.availableFormats","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/available-formats.html","searchKeys":["availableFormats","expect fun availableFormats(): Array<String>","qrcode.render.QRCodeGraphics.availableFormats"]},{"name":"expect fun changed(): Boolean","description":"qrcode.render.QRCodeGraphics.changed","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/changed.html","searchKeys":["changed","expect fun changed(): Boolean","qrcode.render.QRCodeGraphics.changed"]},{"name":"expect fun dimensions(): Array<Int>","description":"qrcode.render.QRCodeGraphics.dimensions","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/dimensions.html","searchKeys":["dimensions","expect fun dimensions(): Array<Int>","qrcode.render.QRCodeGraphics.dimensions"]},{"name":"expect fun drawEllipse(x: Int, y: Int, width: Int, height: Int, color: Int, thickness: Double)","description":"qrcode.render.QRCodeGraphics.drawEllipse","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/draw-ellipse.html","searchKeys":["drawEllipse","expect fun drawEllipse(x: Int, y: Int, width: Int, height: Int, color: Int, thickness: Double)","qrcode.render.QRCodeGraphics.drawEllipse"]},{"name":"expect fun drawImage(rawData: ByteArray?, x: Int, y: Int)","description":"qrcode.render.QRCodeGraphics.drawImage","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/draw-image.html","searchKeys":["drawImage","expect fun drawImage(rawData: ByteArray?, x: Int, y: Int)","qrcode.render.QRCodeGraphics.drawImage"]},{"name":"expect fun drawLine(x1: Int, y1: Int, x2: Int, y2: Int, color: Int, thickness: Double)","description":"qrcode.render.QRCodeGraphics.drawLine","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/draw-line.html","searchKeys":["drawLine","expect fun drawLine(x1: Int, y1: Int, x2: Int, y2: Int, color: Int, thickness: Double)","qrcode.render.QRCodeGraphics.drawLine"]},{"name":"expect fun drawRect(x: Int, y: Int, width: Int, height: Int, color: Int, thickness: Double)","description":"qrcode.render.QRCodeGraphics.drawRect","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/draw-rect.html","searchKeys":["drawRect","expect fun drawRect(x: Int, y: Int, width: Int, height: Int, color: Int, thickness: Double)","qrcode.render.QRCodeGraphics.drawRect"]},{"name":"expect fun drawRoundRect(x: Int, y: Int, width: Int, height: Int, borderRadius: Int, color: Int, thickness: Double)","description":"qrcode.render.QRCodeGraphics.drawRoundRect","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/draw-round-rect.html","searchKeys":["drawRoundRect","expect fun drawRoundRect(x: Int, y: Int, width: Int, height: Int, borderRadius: Int, color: Int, thickness: Double)","qrcode.render.QRCodeGraphics.drawRoundRect"]},{"name":"expect fun fill(color: Int)","description":"qrcode.render.QRCodeGraphics.fill","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/fill.html","searchKeys":["fill","expect fun fill(color: Int)","qrcode.render.QRCodeGraphics.fill"]},{"name":"expect fun fillEllipse(x: Int, y: Int, width: Int, height: Int, color: Int)","description":"qrcode.render.QRCodeGraphics.fillEllipse","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/fill-ellipse.html","searchKeys":["fillEllipse","expect fun fillEllipse(x: Int, y: Int, width: Int, height: Int, color: Int)","qrcode.render.QRCodeGraphics.fillEllipse"]},{"name":"expect fun fillRect(x: Int, y: Int, width: Int, height: Int, color: Int)","description":"qrcode.render.QRCodeGraphics.fillRect","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/fill-rect.html","searchKeys":["fillRect","expect fun fillRect(x: Int, y: Int, width: Int, height: Int, color: Int)","qrcode.render.QRCodeGraphics.fillRect"]},{"name":"expect fun fillRoundRect(x: Int, y: Int, width: Int, height: Int, borderRadius: Int, color: Int)","description":"qrcode.render.QRCodeGraphics.fillRoundRect","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/fill-round-rect.html","searchKeys":["fillRoundRect","expect fun fillRoundRect(x: Int, y: Int, width: Int, height: Int, borderRadius: Int, color: Int)","qrcode.render.QRCodeGraphics.fillRoundRect"]},{"name":"expect fun getBytes(): ByteArray","description":"qrcode.render.QRCodeGraphics.getBytes","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/get-bytes.html","searchKeys":["getBytes","expect fun getBytes(): ByteArray","qrcode.render.QRCodeGraphics.getBytes"]},{"name":"expect fun getBytes(format: String): ByteArray","description":"qrcode.render.QRCodeGraphics.getBytes","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/get-bytes.html","searchKeys":["getBytes","expect fun getBytes(format: String): ByteArray","qrcode.render.QRCodeGraphics.getBytes"]},{"name":"expect fun nativeImage(): Any","description":"qrcode.render.QRCodeGraphics.nativeImage","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/native-image.html","searchKeys":["nativeImage","expect fun nativeImage(): Any","qrcode.render.QRCodeGraphics.nativeImage"]},{"name":"expect fun reset()","description":"qrcode.render.QRCodeGraphics.reset","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/reset.html","searchKeys":["reset","expect fun reset()","qrcode.render.QRCodeGraphics.reset"]},{"name":"fun absoluteX(cellSize: Int = QRCodeProcessor.DEFAULT_CELL_SIZE): Int","description":"qrcode.internals.QRCodeSquare.absoluteX","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/absolute-x.html","searchKeys":["absoluteX","fun absoluteX(cellSize: Int = QRCodeProcessor.DEFAULT_CELL_SIZE): Int","qrcode.internals.QRCodeSquare.absoluteX"]},{"name":"fun absoluteY(cellSize: Int = QRCodeProcessor.DEFAULT_CELL_SIZE): Int","description":"qrcode.internals.QRCodeSquare.absoluteY","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/absolute-y.html","searchKeys":["absoluteY","fun absoluteY(cellSize: Int = QRCodeProcessor.DEFAULT_CELL_SIZE): Int","qrcode.internals.QRCodeSquare.absoluteY"]},{"name":"fun build(data: String): QRCode","description":"qrcode.QRCodeBuilder.build","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/build.html","searchKeys":["build","fun build(data: String): QRCode","qrcode.QRCodeBuilder.build"]},{"name":"fun computeImageSize(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = 0, rawData: QRCodeRawData = encode()): Int","description":"qrcode.raw.QRCodeProcessor.computeImageSize","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/compute-image-size.html","searchKeys":["computeImageSize","fun computeImageSize(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = 0, rawData: QRCodeRawData = encode()): Int","qrcode.raw.QRCodeProcessor.computeImageSize"]},{"name":"fun computeImageSize(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = DEFAULT_MARGIN, size: Int): Int","description":"qrcode.raw.QRCodeProcessor.computeImageSize","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/compute-image-size.html","searchKeys":["computeImageSize","fun computeImageSize(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = DEFAULT_MARGIN, size: Int): Int","qrcode.raw.QRCodeProcessor.computeImageSize"]},{"name":"fun css(str: String): Int","description":"qrcode.color.Colors.css","location":"-q-r-code--kotlin/qrcode.color/-colors/css.html","searchKeys":["css","fun css(str: String): Int","qrcode.color.Colors.css"]},{"name":"fun defaultInnerSpace(squareSize: Int): Int","description":"qrcode.shape.CircleShapeFunction.Companion.defaultInnerSpace","location":"-q-r-code--kotlin/qrcode.shape/-circle-shape-function/-companion/default-inner-space.html","searchKeys":["defaultInnerSpace","fun defaultInnerSpace(squareSize: Int): Int","qrcode.shape.CircleShapeFunction.Companion.defaultInnerSpace"]},{"name":"fun defaultInnerSpace(squareSize: Int): Int","description":"qrcode.shape.RoundSquaresShapeFunction.Companion.defaultInnerSpace","location":"-q-r-code--kotlin/qrcode.shape/-round-squares-shape-function/-companion/default-inner-space.html","searchKeys":["defaultInnerSpace","fun defaultInnerSpace(squareSize: Int): Int","qrcode.shape.RoundSquaresShapeFunction.Companion.defaultInnerSpace"]},{"name":"fun defaultRadius(squareSize: Int): Int","description":"qrcode.shape.CircleShapeFunction.Companion.defaultRadius","location":"-q-r-code--kotlin/qrcode.shape/-circle-shape-function/-companion/default-radius.html","searchKeys":["defaultRadius","fun defaultRadius(squareSize: Int): Int","qrcode.shape.CircleShapeFunction.Companion.defaultRadius"]},{"name":"fun defaultRadius(squareSize: Int): Int","description":"qrcode.shape.RoundSquaresShapeFunction.Companion.defaultRadius","location":"-q-r-code--kotlin/qrcode.shape/-round-squares-shape-function/-companion/default-radius.html","searchKeys":["defaultRadius","fun defaultRadius(squareSize: Int): Int","qrcode.shape.RoundSquaresShapeFunction.Companion.defaultRadius"]},{"name":"fun directDraw(action: Consumer<Graphics2D>)","description":"qrcode.render.QRCodeGraphics.directDraw","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/direct-draw.html","searchKeys":["directDraw","fun directDraw(action: Consumer<Graphics2D>)","qrcode.render.QRCodeGraphics.directDraw"]},{"name":"fun encode(type: Int = typeForDataAndECL(data, errorCorrectionLevel), maskPattern: MaskPattern = MaskPattern.PATTERN000): QRCodeRawData","description":"qrcode.raw.QRCodeProcessor.encode","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/encode.html","searchKeys":["encode","fun encode(type: Int = typeForDataAndECL(data, errorCorrectionLevel), maskPattern: MaskPattern = MaskPattern.PATTERN000): QRCodeRawData","qrcode.raw.QRCodeProcessor.encode"]},{"name":"fun forceInformationDensity(forceInformationDensity: Boolean): QRCodeBuilder","description":"qrcode.QRCodeBuilder.forceInformationDensity","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/force-information-density.html","searchKeys":["forceInformationDensity","fun forceInformationDensity(forceInformationDensity: Boolean): QRCodeBuilder","qrcode.QRCodeBuilder.forceInformationDensity"]},{"name":"fun getRGBA(color: Int): IntArray","description":"qrcode.color.Colors.getRGBA","location":"-q-r-code--kotlin/qrcode.color/-colors/get-r-g-b-a.html","searchKeys":["getRGBA","fun getRGBA(color: Int): IntArray","qrcode.color.Colors.getRGBA"]},{"name":"fun getRGBAPercentages(color: Int, maxValue: Double = 255.0): DoubleArray","description":"qrcode.color.Colors.getRGBAPercentages","location":"-q-r-code--kotlin/qrcode.color/-colors/get-r-g-b-a-percentages.html","searchKeys":["getRGBAPercentages","fun getRGBAPercentages(color: Int, maxValue: Double = 255.0): DoubleArray","qrcode.color.Colors.getRGBAPercentages"]},{"name":"fun ofCircles(): QRCodeBuilder","description":"qrcode.QRCode.Companion.ofCircles","location":"-q-r-code--kotlin/qrcode/-q-r-code/-companion/of-circles.html","searchKeys":["ofCircles","fun ofCircles(): QRCodeBuilder","qrcode.QRCode.Companion.ofCircles"]},{"name":"fun ofCustomShape(customShapeFunction: QRCodeShapeFunction): QRCodeBuilder","description":"qrcode.QRCode.Companion.ofCustomShape","location":"-q-r-code--kotlin/qrcode/-q-r-code/-companion/of-custom-shape.html","searchKeys":["ofCustomShape","fun ofCustomShape(customShapeFunction: QRCodeShapeFunction): QRCodeBuilder","qrcode.QRCode.Companion.ofCustomShape"]},{"name":"fun ofRoundedSquares(): QRCodeBuilder","description":"qrcode.QRCode.Companion.ofRoundedSquares","location":"-q-r-code--kotlin/qrcode/-q-r-code/-companion/of-rounded-squares.html","searchKeys":["ofRoundedSquares","fun ofRoundedSquares(): QRCodeBuilder","qrcode.QRCode.Companion.ofRoundedSquares"]},{"name":"fun ofSquares(): QRCodeBuilder","description":"qrcode.QRCode.Companion.ofSquares","location":"-q-r-code--kotlin/qrcode/-q-r-code/-companion/of-squares.html","searchKeys":["ofSquares","fun ofSquares(): QRCodeBuilder","qrcode.QRCode.Companion.ofSquares"]},{"name":"fun render(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = DEFAULT_MARGIN, brightColor: Int = Colors.WHITE, darkColor: Int = Colors.BLACK, marginColor: Int = Colors.WHITE): QRCodeGraphics","description":"qrcode.raw.QRCodeProcessor.render","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/render.html","searchKeys":["render","fun render(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = DEFAULT_MARGIN, brightColor: Int = Colors.WHITE, darkColor: Int = Colors.BLACK, marginColor: Int = Colors.WHITE): QRCodeGraphics","qrcode.raw.QRCodeProcessor.render"]},{"name":"fun render(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = DEFAULT_MARGIN, rawData: QRCodeRawData = encode(), qrCodeGraphics: QRCodeGraphics = graphicsFactory.newGraphicsSquare(\n            computeImageSize(\n                cellSize,\n                margin,\n                rawData,\n            ),\n        ), brightColor: Int = Colors.WHITE, darkColor: Int = Colors.BLACK, marginColor: Int = Colors.WHITE): QRCodeGraphics","description":"qrcode.raw.QRCodeProcessor.render","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/render.html","searchKeys":["render","fun render(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = DEFAULT_MARGIN, rawData: QRCodeRawData = encode(), qrCodeGraphics: QRCodeGraphics = graphicsFactory.newGraphicsSquare(\n            computeImageSize(\n                cellSize,\n                margin,\n                rawData,\n            ),\n        ), brightColor: Int = Colors.WHITE, darkColor: Int = Colors.BLACK, marginColor: Int = Colors.WHITE): QRCodeGraphics","qrcode.raw.QRCodeProcessor.render"]},{"name":"fun render(qrCodeGraphics: QRCodeGraphics = graphics, xOffset: Int = 0, yOffset: Int = 0): QRCodeGraphics","description":"qrcode.QRCode.render","location":"-q-r-code--kotlin/qrcode/-q-r-code/render.html","searchKeys":["render","fun render(qrCodeGraphics: QRCodeGraphics = graphics, xOffset: Int = 0, yOffset: Int = 0): QRCodeGraphics","qrcode.QRCode.render"]},{"name":"fun renderShaded(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = DEFAULT_MARGIN, rawData: QRCodeRawData = encode(), qrCodeGraphics: QRCodeGraphics = graphicsFactory.newGraphicsSquare(\n            computeImageSize(\n                cellSize,\n                margin,\n                rawData,\n            ),\n        ), renderer: (Int, Int, QRCodeSquare, QRCodeGraphics) -> Unit): QRCodeGraphics","description":"qrcode.raw.QRCodeProcessor.renderShaded","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/render-shaded.html","searchKeys":["renderShaded","fun renderShaded(cellSize: Int = DEFAULT_CELL_SIZE, margin: Int = DEFAULT_MARGIN, rawData: QRCodeRawData = encode(), qrCodeGraphics: QRCodeGraphics = graphicsFactory.newGraphicsSquare(\n            computeImageSize(\n                cellSize,\n                margin,\n                rawData,\n            ),\n        ), renderer: (Int, Int, QRCodeSquare, QRCodeGraphics) -> Unit): QRCodeGraphics","qrcode.raw.QRCodeProcessor.renderShaded"]},{"name":"fun renderToBytes(format: String = \"PNG\"): ByteArray","description":"qrcode.QRCode.renderToBytes","location":"-q-r-code--kotlin/qrcode/-q-r-code/render-to-bytes.html","searchKeys":["renderToBytes","fun renderToBytes(format: String = \"PNG\"): ByteArray","qrcode.QRCode.renderToBytes"]},{"name":"fun reset()","description":"qrcode.QRCode.reset","location":"-q-r-code--kotlin/qrcode/-q-r-code/reset.html","searchKeys":["reset","fun reset()","qrcode.QRCode.reset"]},{"name":"fun rgba(r: Int, g: Int, b: Int, a: Int = 255): Int","description":"qrcode.color.Colors.rgba","location":"-q-r-code--kotlin/qrcode.color/-colors/rgba.html","searchKeys":["rgba","fun rgba(r: Int, g: Int, b: Int, a: Int = 255): Int","qrcode.color.Colors.rgba"]},{"name":"fun typeForDataAndECL(data: String, errorCorrectionLevel: ErrorCorrectionLevel, dataType: QRCodeDataType = QRUtil.getDataType(data)): Int","description":"qrcode.raw.QRCodeProcessor.Companion.typeForDataAndECL","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/-companion/type-for-data-and-e-c-l.html","searchKeys":["typeForDataAndECL","fun typeForDataAndECL(data: String, errorCorrectionLevel: ErrorCorrectionLevel, dataType: QRCodeDataType = QRUtil.getDataType(data)): Int","qrcode.raw.QRCodeProcessor.Companion.typeForDataAndECL"]},{"name":"fun valueOf(value: String): ErrorCorrectionLevel","description":"qrcode.raw.ErrorCorrectionLevel.valueOf","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ErrorCorrectionLevel","qrcode.raw.ErrorCorrectionLevel.valueOf"]},{"name":"fun valueOf(value: String): MaskPattern","description":"qrcode.raw.MaskPattern.valueOf","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MaskPattern","qrcode.raw.MaskPattern.valueOf"]},{"name":"fun valueOf(value: String): QRCodeDataType","description":"qrcode.raw.QRCodeDataType.valueOf","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-data-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): QRCodeDataType","qrcode.raw.QRCodeDataType.valueOf"]},{"name":"fun valueOf(value: String): QRCodeRegion","description":"qrcode.internals.QRCodeRegion.valueOf","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): QRCodeRegion","qrcode.internals.QRCodeRegion.valueOf"]},{"name":"fun valueOf(value: String): QRCodeShapesEnum","description":"qrcode.QRCodeShapesEnum.valueOf","location":"-q-r-code--kotlin/qrcode/-q-r-code-shapes-enum/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): QRCodeShapesEnum","qrcode.QRCodeShapesEnum.valueOf"]},{"name":"fun valueOf(value: String): QRCodeSquareType","description":"qrcode.internals.QRCodeSquareType.valueOf","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): QRCodeSquareType","qrcode.internals.QRCodeSquareType.valueOf"]},{"name":"fun values(): Array<ErrorCorrectionLevel>","description":"qrcode.raw.ErrorCorrectionLevel.values","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/values.html","searchKeys":["values","fun values(): Array<ErrorCorrectionLevel>","qrcode.raw.ErrorCorrectionLevel.values"]},{"name":"fun values(): Array<MaskPattern>","description":"qrcode.raw.MaskPattern.values","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/values.html","searchKeys":["values","fun values(): Array<MaskPattern>","qrcode.raw.MaskPattern.values"]},{"name":"fun values(): Array<QRCodeDataType>","description":"qrcode.raw.QRCodeDataType.values","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-data-type/values.html","searchKeys":["values","fun values(): Array<QRCodeDataType>","qrcode.raw.QRCodeDataType.values"]},{"name":"fun values(): Array<QRCodeRegion>","description":"qrcode.internals.QRCodeRegion.values","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/values.html","searchKeys":["values","fun values(): Array<QRCodeRegion>","qrcode.internals.QRCodeRegion.values"]},{"name":"fun values(): Array<QRCodeShapesEnum>","description":"qrcode.QRCodeShapesEnum.values","location":"-q-r-code--kotlin/qrcode/-q-r-code-shapes-enum/values.html","searchKeys":["values","fun values(): Array<QRCodeShapesEnum>","qrcode.QRCodeShapesEnum.values"]},{"name":"fun values(): Array<QRCodeSquareType>","description":"qrcode.internals.QRCodeSquareType.values","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-type/values.html","searchKeys":["values","fun values(): Array<QRCodeSquareType>","qrcode.internals.QRCodeSquareType.values"]},{"name":"fun withAfterRenderAction(action: QRCode.(QRCodeGraphics) -> Unit): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withAfterRenderAction","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-after-render-action.html","searchKeys":["withAfterRenderAction","fun withAfterRenderAction(action: QRCode.(QRCodeGraphics) -> Unit): QRCodeBuilder","qrcode.QRCodeBuilder.withAfterRenderAction"]},{"name":"fun withAlpha(color: Int, alpha: Int): Int","description":"qrcode.color.Colors.withAlpha","location":"-q-r-code--kotlin/qrcode.color/-colors/with-alpha.html","searchKeys":["withAlpha","fun withAlpha(color: Int, alpha: Int): Int","qrcode.color.Colors.withAlpha"]},{"name":"fun withBackgroundColor(bgColor: Int): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withBackgroundColor","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-background-color.html","searchKeys":["withBackgroundColor","fun withBackgroundColor(bgColor: Int): QRCodeBuilder","qrcode.QRCodeBuilder.withBackgroundColor"]},{"name":"fun withBeforeRenderAction(action: QRCode.(QRCodeGraphics) -> Unit): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withBeforeRenderAction","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-before-render-action.html","searchKeys":["withBeforeRenderAction","fun withBeforeRenderAction(action: QRCode.(QRCodeGraphics) -> Unit): QRCodeBuilder","qrcode.QRCodeBuilder.withBeforeRenderAction"]},{"name":"fun withColor(color: Int): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withColor","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-color.html","searchKeys":["withColor","fun withColor(color: Int): QRCodeBuilder","qrcode.QRCodeBuilder.withColor"]},{"name":"fun withCustomColorFunction(colorFn: QRCodeColorFunction?): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withCustomColorFunction","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-custom-color-function.html","searchKeys":["withCustomColorFunction","fun withCustomColorFunction(colorFn: QRCodeColorFunction?): QRCodeBuilder","qrcode.QRCodeBuilder.withCustomColorFunction"]},{"name":"fun withCustomShapeFunction(shapeFn: QRCodeShapeFunction?): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withCustomShapeFunction","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-custom-shape-function.html","searchKeys":["withCustomShapeFunction","fun withCustomShapeFunction(shapeFn: QRCodeShapeFunction?): QRCodeBuilder","qrcode.QRCodeBuilder.withCustomShapeFunction"]},{"name":"fun withErrorCorrectionLevel(ecl: ErrorCorrectionLevel): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withErrorCorrectionLevel","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-error-correction-level.html","searchKeys":["withErrorCorrectionLevel","fun withErrorCorrectionLevel(ecl: ErrorCorrectionLevel): QRCodeBuilder","qrcode.QRCodeBuilder.withErrorCorrectionLevel"]},{"name":"fun withGradientColor(startColor: Int, endColor: Int?, vertical: Boolean = true): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withGradientColor","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-gradient-color.html","searchKeys":["withGradientColor","fun withGradientColor(startColor: Int, endColor: Int?, vertical: Boolean = true): QRCodeBuilder","qrcode.QRCodeBuilder.withGradientColor"]},{"name":"fun withGraphicsFactory(factory: QRCodeGraphicsFactory): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withGraphicsFactory","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-graphics-factory.html","searchKeys":["withGraphicsFactory","fun withGraphicsFactory(factory: QRCodeGraphicsFactory): QRCodeBuilder","qrcode.QRCodeBuilder.withGraphicsFactory"]},{"name":"fun withInformationDensity(minTypeNum: Int): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withInformationDensity","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-information-density.html","searchKeys":["withInformationDensity","fun withInformationDensity(minTypeNum: Int): QRCodeBuilder","qrcode.QRCodeBuilder.withInformationDensity"]},{"name":"fun withInnerSpacing(innerSpacing: Int? = null): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withInnerSpacing","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-inner-spacing.html","searchKeys":["withInnerSpacing","fun withInnerSpacing(innerSpacing: Int? = null): QRCodeBuilder","qrcode.QRCodeBuilder.withInnerSpacing"]},{"name":"fun withLogo(logo: ByteArray?, width: Int, height: Int, clearLogoArea: Boolean = true): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withLogo","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-logo.html","searchKeys":["withLogo","fun withLogo(logo: ByteArray?, width: Int, height: Int, clearLogoArea: Boolean = true): QRCodeBuilder","qrcode.QRCodeBuilder.withLogo"]},{"name":"fun withRadius(radius: Int): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withRadius","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-radius.html","searchKeys":["withRadius","fun withRadius(radius: Int): QRCodeBuilder","qrcode.QRCodeBuilder.withRadius"]},{"name":"fun withShape(shape: QRCodeShapesEnum): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withShape","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-shape.html","searchKeys":["withShape","fun withShape(shape: QRCodeShapesEnum): QRCodeBuilder","qrcode.QRCodeBuilder.withShape"]},{"name":"fun withSize(size: Int): QRCodeBuilder","description":"qrcode.QRCodeBuilder.withSize","location":"-q-r-code--kotlin/qrcode/-q-r-code-builder/with-size.html","searchKeys":["withSize","fun withSize(size: Int): QRCodeBuilder","qrcode.QRCodeBuilder.withSize"]},{"name":"interface QRCodeColorFunction","description":"qrcode.color.QRCodeColorFunction","location":"-q-r-code--kotlin/qrcode.color/-q-r-code-color-function/index.html","searchKeys":["QRCodeColorFunction","interface QRCodeColorFunction","qrcode.color.QRCodeColorFunction"]},{"name":"interface QRCodeShapeFunction","description":"qrcode.shape.QRCodeShapeFunction","location":"-q-r-code--kotlin/qrcode.shape/-q-r-code-shape-function/index.html","searchKeys":["QRCodeShapeFunction","interface QRCodeShapeFunction","qrcode.shape.QRCodeShapeFunction"]},{"name":"object Colors","description":"qrcode.color.Colors","location":"-q-r-code--kotlin/qrcode.color/-colors/index.html","searchKeys":["Colors","object Colors","qrcode.color.Colors"]},{"name":"object Companion","description":"qrcode.QRCode.Companion","location":"-q-r-code--kotlin/qrcode/-q-r-code/-companion/index.html","searchKeys":["Companion","object Companion","qrcode.QRCode.Companion"]},{"name":"object Companion","description":"qrcode.internals.QRCodeSquareInfo.Companion","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-info/-companion/index.html","searchKeys":["Companion","object Companion","qrcode.internals.QRCodeSquareInfo.Companion"]},{"name":"object Companion","description":"qrcode.raw.QRCodeProcessor.Companion","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/-companion/index.html","searchKeys":["Companion","object Companion","qrcode.raw.QRCodeProcessor.Companion"]},{"name":"object Companion","description":"qrcode.render.QRCodeGraphics.Companion","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/[android]-companion/index.html","searchKeys":["Companion","object Companion","qrcode.render.QRCodeGraphics.Companion"]},{"name":"object Companion","description":"qrcode.render.QRCodeGraphics.Companion","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/[js]-companion/index.html","searchKeys":["Companion","object Companion","qrcode.render.QRCodeGraphics.Companion"]},{"name":"object Companion","description":"qrcode.shape.CircleShapeFunction.Companion","location":"-q-r-code--kotlin/qrcode.shape/-circle-shape-function/-companion/index.html","searchKeys":["Companion","object Companion","qrcode.shape.CircleShapeFunction.Companion"]},{"name":"object Companion","description":"qrcode.shape.RoundSquaresShapeFunction.Companion","location":"-q-r-code--kotlin/qrcode.shape/-round-squares-shape-function/-companion/index.html","searchKeys":["Companion","object Companion","qrcode.shape.RoundSquaresShapeFunction.Companion"]},{"name":"open class CircleShapeFunction constructor(val squareSize: Int = DEFAULT_CELL_SIZE, innerSpace: Int = defaultInnerSpace(squareSize)) : RoundSquaresShapeFunction","description":"qrcode.shape.CircleShapeFunction","location":"-q-r-code--kotlin/qrcode.shape/-circle-shape-function/index.html","searchKeys":["CircleShapeFunction","open class CircleShapeFunction constructor(val squareSize: Int = DEFAULT_CELL_SIZE, innerSpace: Int = defaultInnerSpace(squareSize)) : RoundSquaresShapeFunction","qrcode.shape.CircleShapeFunction"]},{"name":"open class DefaultColorFunction(foreground: Int = Colors.BLACK, background: Int = Colors.WHITE) : QRCodeColorFunction","description":"qrcode.color.DefaultColorFunction","location":"-q-r-code--kotlin/qrcode.color/-default-color-function/index.html","searchKeys":["DefaultColorFunction","open class DefaultColorFunction(foreground: Int = Colors.BLACK, background: Int = Colors.WHITE) : QRCodeColorFunction","qrcode.color.DefaultColorFunction"]},{"name":"open class DefaultShapeFunction(val squareSize: Int = DEFAULT_CELL_SIZE, innerSpace: Int = 1) : QRCodeShapeFunction","description":"qrcode.shape.DefaultShapeFunction","location":"-q-r-code--kotlin/qrcode.shape/-default-shape-function/index.html","searchKeys":["DefaultShapeFunction","open class DefaultShapeFunction(val squareSize: Int = DEFAULT_CELL_SIZE, innerSpace: Int = 1) : QRCodeShapeFunction","qrcode.shape.DefaultShapeFunction"]},{"name":"open class QRCodeGraphicsFactory","description":"qrcode.render.QRCodeGraphicsFactory","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics-factory/index.html","searchKeys":["QRCodeGraphicsFactory","open class QRCodeGraphicsFactory","qrcode.render.QRCodeGraphicsFactory"]},{"name":"open class RoundSquaresShapeFunction constructor(val squareSize: Int = DEFAULT_CELL_SIZE, radius: Int = defaultRadius(squareSize), innerSpace: Int = defaultInnerSpace(squareSize)) : DefaultShapeFunction","description":"qrcode.shape.RoundSquaresShapeFunction","location":"-q-r-code--kotlin/qrcode.shape/-round-squares-shape-function/index.html","searchKeys":["RoundSquaresShapeFunction","open class RoundSquaresShapeFunction constructor(val squareSize: Int = DEFAULT_CELL_SIZE, radius: Int = defaultRadius(squareSize), innerSpace: Int = defaultInnerSpace(squareSize)) : DefaultShapeFunction","qrcode.shape.RoundSquaresShapeFunction"]},{"name":"open fun beforeRender(qrCode: QRCode, qrCodeGraphics: QRCodeGraphics)","description":"qrcode.color.QRCodeColorFunction.beforeRender","location":"-q-r-code--kotlin/qrcode.color/-q-r-code-color-function/before-render.html","searchKeys":["beforeRender","open fun beforeRender(qrCode: QRCode, qrCodeGraphics: QRCodeGraphics)","qrcode.color.QRCodeColorFunction.beforeRender"]},{"name":"open fun beforeRender(qrCode: QRCode, qrCodeGraphics: QRCodeGraphics)","description":"qrcode.shape.QRCodeShapeFunction.beforeRender","location":"-q-r-code--kotlin/qrcode.shape/-q-r-code-shape-function/before-render.html","searchKeys":["beforeRender","open fun beforeRender(qrCode: QRCode, qrCodeGraphics: QRCodeGraphics)","qrcode.shape.QRCodeShapeFunction.beforeRender"]},{"name":"open fun colorFn(square: QRCodeSquare, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.QRCodeColorFunction.colorFn","location":"-q-r-code--kotlin/qrcode.color/-q-r-code-color-function/color-fn.html","searchKeys":["colorFn","open fun colorFn(square: QRCodeSquare, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.QRCodeColorFunction.colorFn"]},{"name":"open fun drawImage(image: BufferedImage?, x: Int, y: Int)","description":"qrcode.render.QRCodeGraphics.drawImage","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/draw-image.html","searchKeys":["drawImage","open fun drawImage(image: BufferedImage?, x: Int, y: Int)","qrcode.render.QRCodeGraphics.drawImage"]},{"name":"open fun drawImage(img: Bitmap, x: Int, y: Int)","description":"qrcode.render.QRCodeGraphics.drawImage","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/draw-image.html","searchKeys":["drawImage","open fun drawImage(img: Bitmap, x: Int, y: Int)","qrcode.render.QRCodeGraphics.drawImage"]},{"name":"open fun drawRect(x: Int, y: Int, width: Int, height: Int, color: Int, thickness: Double, canvas: QRCodeGraphics)","description":"qrcode.shape.DefaultShapeFunction.drawRect","location":"-q-r-code--kotlin/qrcode.shape/-default-shape-function/draw-rect.html","searchKeys":["drawRect","open fun drawRect(x: Int, y: Int, width: Int, height: Int, color: Int, thickness: Double, canvas: QRCodeGraphics)","qrcode.shape.DefaultShapeFunction.drawRect"]},{"name":"open fun fillRect(x: Int, y: Int, width: Int, height: Int, color: Int, canvas: QRCodeGraphics)","description":"qrcode.shape.DefaultShapeFunction.fillRect","location":"-q-r-code--kotlin/qrcode.shape/-default-shape-function/fill-rect.html","searchKeys":["fillRect","open fun fillRect(x: Int, y: Int, width: Int, height: Int, color: Int, canvas: QRCodeGraphics)","qrcode.shape.DefaultShapeFunction.fillRect"]},{"name":"open fun margin(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.QRCodeColorFunction.margin","location":"-q-r-code--kotlin/qrcode.color/-q-r-code-color-function/margin.html","searchKeys":["margin","open fun margin(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.QRCodeColorFunction.margin"]},{"name":"open fun newGraphics(width: Int, height: Int): QRCodeGraphics","description":"qrcode.render.QRCodeGraphicsFactory.newGraphics","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics-factory/new-graphics.html","searchKeys":["newGraphics","open fun newGraphics(width: Int, height: Int): QRCodeGraphics","qrcode.render.QRCodeGraphicsFactory.newGraphics"]},{"name":"open fun newGraphicsSquare(size: Int): QRCodeGraphics","description":"qrcode.render.QRCodeGraphicsFactory.newGraphicsSquare","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics-factory/new-graphics-square.html","searchKeys":["newGraphicsSquare","open fun newGraphicsSquare(size: Int): QRCodeGraphics","qrcode.render.QRCodeGraphicsFactory.newGraphicsSquare"]},{"name":"open fun toBlob(callback: (Blob?) -> Unit)","description":"qrcode.render.QRCodeGraphics.toBlob","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/to-blob.html","searchKeys":["toBlob","open fun toBlob(callback: (Blob?) -> Unit)","qrcode.render.QRCodeGraphics.toBlob"]},{"name":"open fun toDataURL(format: String = \"png\"): String","description":"qrcode.render.QRCodeGraphics.toDataURL","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/to-data-u-r-l.html","searchKeys":["toDataURL","open fun toDataURL(format: String = \"png\"): String","qrcode.render.QRCodeGraphics.toDataURL"]},{"name":"open fun writeImage(destination: OutputStream, format: String = \"PNG\")","description":"qrcode.render.QRCodeGraphics.writeImage","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/write-image.html","searchKeys":["writeImage","open fun writeImage(destination: OutputStream, format: String = \"PNG\")","qrcode.render.QRCodeGraphics.writeImage"]},{"name":"open fun writeImage(destination: OutputStream, format: String = \"PNG\", quality: Int = 100)","description":"qrcode.render.QRCodeGraphics.writeImage","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/write-image.html","searchKeys":["writeImage","open fun writeImage(destination: OutputStream, format: String = \"PNG\", quality: Int = 100)","qrcode.render.QRCodeGraphics.writeImage"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"qrcode.internals.QRCodeSquare.equals","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","qrcode.internals.QRCodeSquare.equals"]},{"name":"open override fun bg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.DefaultColorFunction.bg","location":"-q-r-code--kotlin/qrcode.color/-default-color-function/bg.html","searchKeys":["bg","open override fun bg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.DefaultColorFunction.bg"]},{"name":"open override fun bg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.LinearGradientColorFunction.bg","location":"-q-r-code--kotlin/qrcode.color/-linear-gradient-color-function/bg.html","searchKeys":["bg","open override fun bg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.LinearGradientColorFunction.bg"]},{"name":"open override fun drawRect(x: Int, y: Int, width: Int, height: Int, color: Int, thickness: Double, canvas: QRCodeGraphics)","description":"qrcode.shape.RoundSquaresShapeFunction.drawRect","location":"-q-r-code--kotlin/qrcode.shape/-round-squares-shape-function/draw-rect.html","searchKeys":["drawRect","open override fun drawRect(x: Int, y: Int, width: Int, height: Int, color: Int, thickness: Double, canvas: QRCodeGraphics)","qrcode.shape.RoundSquaresShapeFunction.drawRect"]},{"name":"open override fun fg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.DefaultColorFunction.fg","location":"-q-r-code--kotlin/qrcode.color/-default-color-function/fg.html","searchKeys":["fg","open override fun fg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.DefaultColorFunction.fg"]},{"name":"open override fun fg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.LinearGradientColorFunction.fg","location":"-q-r-code--kotlin/qrcode.color/-linear-gradient-color-function/fg.html","searchKeys":["fg","open override fun fg(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.LinearGradientColorFunction.fg"]},{"name":"open override fun fillRect(x: Int, y: Int, width: Int, height: Int, color: Int, canvas: QRCodeGraphics)","description":"qrcode.shape.RoundSquaresShapeFunction.fillRect","location":"-q-r-code--kotlin/qrcode.shape/-round-squares-shape-function/fill-rect.html","searchKeys":["fillRect","open override fun fillRect(x: Int, y: Int, width: Int, height: Int, color: Int, canvas: QRCodeGraphics)","qrcode.shape.RoundSquaresShapeFunction.fillRect"]},{"name":"open override fun hashCode(): Int","description":"qrcode.internals.QRCodeSquare.hashCode","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","qrcode.internals.QRCodeSquare.hashCode"]},{"name":"open override fun margin(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.DefaultColorFunction.margin","location":"-q-r-code--kotlin/qrcode.color/-default-color-function/margin.html","searchKeys":["margin","open override fun margin(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.DefaultColorFunction.margin"]},{"name":"open override fun margin(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","description":"qrcode.color.LinearGradientColorFunction.margin","location":"-q-r-code--kotlin/qrcode.color/-linear-gradient-color-function/margin.html","searchKeys":["margin","open override fun margin(row: Int, col: Int, qrCode: QRCode, qrCodeGraphics: QRCodeGraphics): Int","qrcode.color.LinearGradientColorFunction.margin"]},{"name":"open override fun renderControlSquare(xOffset: Int, yOffset: Int, colorFn: QRCodeColorFunction, square: QRCodeSquare, canvas: QRCodeGraphics, qrCode: QRCode)","description":"qrcode.shape.DefaultShapeFunction.renderControlSquare","location":"-q-r-code--kotlin/qrcode.shape/-default-shape-function/render-control-square.html","searchKeys":["renderControlSquare","open override fun renderControlSquare(xOffset: Int, yOffset: Int, colorFn: QRCodeColorFunction, square: QRCodeSquare, canvas: QRCodeGraphics, qrCode: QRCode)","qrcode.shape.DefaultShapeFunction.renderControlSquare"]},{"name":"open override fun renderSquare(x: Int, y: Int, colorFn: QRCodeColorFunction, square: QRCodeSquare, canvas: QRCodeGraphics, qrCode: QRCode)","description":"qrcode.shape.DefaultShapeFunction.renderSquare","location":"-q-r-code--kotlin/qrcode.shape/-default-shape-function/render-square.html","searchKeys":["renderSquare","open override fun renderSquare(x: Int, y: Int, colorFn: QRCodeColorFunction, square: QRCodeSquare, canvas: QRCodeGraphics, qrCode: QRCode)","qrcode.shape.DefaultShapeFunction.renderSquare"]},{"name":"open override fun toString(): String","description":"qrcode.raw.QRCodeProcessor.toString","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/to-string.html","searchKeys":["toString","open override fun toString(): String","qrcode.raw.QRCodeProcessor.toString"]},{"name":"typealias ColorType = Int","description":"qrcode.color.ColorType","location":"-q-r-code--kotlin/qrcode.color/-color-type/index.html","searchKeys":["ColorType","typealias ColorType = Int","qrcode.color.ColorType"]},{"name":"typealias QRCodeRawData = Array<Array<QRCodeSquare>>","description":"qrcode.raw.QRCodeRawData","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-raw-data/index.html","searchKeys":["QRCodeRawData","typealias QRCodeRawData = Array<Array<QRCodeSquare>>","qrcode.raw.QRCodeRawData"]},{"name":"val AVAILABLE_FORMATS: Array<String>","description":"qrcode.render.QRCodeGraphics.Companion.AVAILABLE_FORMATS","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/[android]-companion/-a-v-a-i-l-a-b-l-e_-f-o-r-m-a-t-s.html","searchKeys":["AVAILABLE_FORMATS","val AVAILABLE_FORMATS: Array<String>","qrcode.render.QRCodeGraphics.Companion.AVAILABLE_FORMATS"]},{"name":"val backgroundColor: Int","description":"qrcode.color.LinearGradientColorFunction.backgroundColor","location":"-q-r-code--kotlin/qrcode.color/-linear-gradient-color-function/background-color.html","searchKeys":["backgroundColor","val backgroundColor: Int","qrcode.color.LinearGradientColorFunction.backgroundColor"]},{"name":"val col: Int","description":"qrcode.internals.QRCodeSquare.col","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/col.html","searchKeys":["col","val col: Int","qrcode.internals.QRCodeSquare.col"]},{"name":"val colSize: Int = 1","description":"qrcode.internals.QRCodeSquare.colSize","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/col-size.html","searchKeys":["colSize","val colSize: Int = 1","qrcode.internals.QRCodeSquare.colSize"]},{"name":"val colorFn: QRCodeColorFunction","description":"qrcode.QRCode.colorFn","location":"-q-r-code--kotlin/qrcode/-q-r-code/color-fn.html","searchKeys":["colorFn","val colorFn: QRCodeColorFunction","qrcode.QRCode.colorFn"]},{"name":"val computedSize: Int","description":"qrcode.QRCode.computedSize","location":"-q-r-code--kotlin/qrcode/-q-r-code/computed-size.html","searchKeys":["computedSize","val computedSize: Int","qrcode.QRCode.computedSize"]},{"name":"val data: String","description":"qrcode.QRCode.data","location":"-q-r-code--kotlin/qrcode/-q-r-code/data.html","searchKeys":["data","val data: String","qrcode.QRCode.data"]},{"name":"val endForegroundColor: Int","description":"qrcode.color.LinearGradientColorFunction.endForegroundColor","location":"-q-r-code--kotlin/qrcode.color/-linear-gradient-color-function/end-foreground-color.html","searchKeys":["endForegroundColor","val endForegroundColor: Int","qrcode.color.LinearGradientColorFunction.endForegroundColor"]},{"name":"val entries: EnumEntries<ErrorCorrectionLevel>","description":"qrcode.raw.ErrorCorrectionLevel.entries","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/entries.html","searchKeys":["entries","val entries: EnumEntries<ErrorCorrectionLevel>","qrcode.raw.ErrorCorrectionLevel.entries"]},{"name":"val entries: EnumEntries<MaskPattern>","description":"qrcode.raw.MaskPattern.entries","location":"-q-r-code--kotlin/qrcode.raw/-mask-pattern/entries.html","searchKeys":["entries","val entries: EnumEntries<MaskPattern>","qrcode.raw.MaskPattern.entries"]},{"name":"val entries: EnumEntries<QRCodeDataType>","description":"qrcode.raw.QRCodeDataType.entries","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-data-type/entries.html","searchKeys":["entries","val entries: EnumEntries<QRCodeDataType>","qrcode.raw.QRCodeDataType.entries"]},{"name":"val entries: EnumEntries<QRCodeRegion>","description":"qrcode.internals.QRCodeRegion.entries","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-region/entries.html","searchKeys":["entries","val entries: EnumEntries<QRCodeRegion>","qrcode.internals.QRCodeRegion.entries"]},{"name":"val entries: EnumEntries<QRCodeShapesEnum>","description":"qrcode.QRCodeShapesEnum.entries","location":"-q-r-code--kotlin/qrcode/-q-r-code-shapes-enum/entries.html","searchKeys":["entries","val entries: EnumEntries<QRCodeShapesEnum>","qrcode.QRCodeShapesEnum.entries"]},{"name":"val entries: EnumEntries<QRCodeSquareType>","description":"qrcode.internals.QRCodeSquareType.entries","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-type/entries.html","searchKeys":["entries","val entries: EnumEntries<QRCodeSquareType>","qrcode.internals.QRCodeSquareType.entries"]},{"name":"val graphics: QRCodeGraphics","description":"qrcode.QRCode.graphics","location":"-q-r-code--kotlin/qrcode/-q-r-code/graphics.html","searchKeys":["graphics","val graphics: QRCodeGraphics","qrcode.QRCode.graphics"]},{"name":"val graphicsFactory: QRCodeGraphicsFactory","description":"qrcode.raw.QRCodeProcessor.graphicsFactory","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-processor/graphics-factory.html","searchKeys":["graphicsFactory","val graphicsFactory: QRCodeGraphicsFactory","qrcode.raw.QRCodeProcessor.graphicsFactory"]},{"name":"val height: Int","description":"qrcode.render.QRCodeGraphics.height","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/[android]height.html","searchKeys":["height","val height: Int","qrcode.render.QRCodeGraphics.height"]},{"name":"val height: Int","description":"qrcode.render.QRCodeGraphics.height","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/[js]height.html","searchKeys":["height","val height: Int","qrcode.render.QRCodeGraphics.height"]},{"name":"val height: Int","description":"qrcode.render.QRCodeGraphics.height","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/[jvm]height.html","searchKeys":["height","val height: Int","qrcode.render.QRCodeGraphics.height"]},{"name":"val maxTypeNum: Int","description":"qrcode.raw.ErrorCorrectionLevel.maxTypeNum","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/max-type-num.html","searchKeys":["maxTypeNum","val maxTypeNum: Int","qrcode.raw.ErrorCorrectionLevel.maxTypeNum"]},{"name":"val moduleSize: Int","description":"qrcode.internals.QRCodeSquare.moduleSize","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/module-size.html","searchKeys":["moduleSize","val moduleSize: Int","qrcode.internals.QRCodeSquare.moduleSize"]},{"name":"val parent: QRCodeSquare? = null","description":"qrcode.internals.QRCodeSquare.parent","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/parent.html","searchKeys":["parent","val parent: QRCodeSquare? = null","qrcode.internals.QRCodeSquare.parent"]},{"name":"val qrCodeProcessor: QRCodeProcessor","description":"qrcode.QRCode.qrCodeProcessor","location":"-q-r-code--kotlin/qrcode/-q-r-code/qr-code-processor.html","searchKeys":["qrCodeProcessor","val qrCodeProcessor: QRCodeProcessor","qrcode.QRCode.qrCodeProcessor"]},{"name":"val rawData: Array<Array<QRCodeSquare>>","description":"qrcode.QRCode.rawData","location":"-q-r-code--kotlin/qrcode/-q-r-code/raw-data.html","searchKeys":["rawData","val rawData: Array<Array<QRCodeSquare>>","qrcode.QRCode.rawData"]},{"name":"val region: QRCodeRegion","description":"qrcode.internals.QRCodeSquareInfo.region","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-info/region.html","searchKeys":["region","val region: QRCodeRegion","qrcode.internals.QRCodeSquareInfo.region"]},{"name":"val row: Int","description":"qrcode.internals.QRCodeSquare.row","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/row.html","searchKeys":["row","val row: Int","qrcode.internals.QRCodeSquare.row"]},{"name":"val rowSize: Int = 1","description":"qrcode.internals.QRCodeSquare.rowSize","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/row-size.html","searchKeys":["rowSize","val rowSize: Int = 1","qrcode.internals.QRCodeSquare.rowSize"]},{"name":"val shapeFn: QRCodeShapeFunction","description":"qrcode.QRCode.shapeFn","location":"-q-r-code--kotlin/qrcode/-q-r-code/shape-fn.html","searchKeys":["shapeFn","val shapeFn: QRCodeShapeFunction","qrcode.QRCode.shapeFn"]},{"name":"val squareInfo: QRCodeSquareInfo","description":"qrcode.internals.QRCodeSquare.squareInfo","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/square-info.html","searchKeys":["squareInfo","val squareInfo: QRCodeSquareInfo","qrcode.internals.QRCodeSquare.squareInfo"]},{"name":"val squareSize: Int","description":"qrcode.QRCode.squareSize","location":"-q-r-code--kotlin/qrcode/-q-r-code/square-size.html","searchKeys":["squareSize","val squareSize: Int","qrcode.QRCode.squareSize"]},{"name":"val squareSize: Int","description":"qrcode.shape.DefaultShapeFunction.squareSize","location":"-q-r-code--kotlin/qrcode.shape/-default-shape-function/square-size.html","searchKeys":["squareSize","val squareSize: Int","qrcode.shape.DefaultShapeFunction.squareSize"]},{"name":"val startForegroundColor: Int","description":"qrcode.color.LinearGradientColorFunction.startForegroundColor","location":"-q-r-code--kotlin/qrcode.color/-linear-gradient-color-function/start-foreground-color.html","searchKeys":["startForegroundColor","val startForegroundColor: Int","qrcode.color.LinearGradientColorFunction.startForegroundColor"]},{"name":"val type: QRCodeSquareType","description":"qrcode.internals.QRCodeSquareInfo.type","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square-info/type.html","searchKeys":["type","val type: QRCodeSquareType","qrcode.internals.QRCodeSquareInfo.type"]},{"name":"val typeNum: Int","description":"qrcode.QRCode.typeNum","location":"-q-r-code--kotlin/qrcode/-q-r-code/type-num.html","searchKeys":["typeNum","val typeNum: Int","qrcode.QRCode.typeNum"]},{"name":"val value: Int","description":"qrcode.raw.ErrorCorrectionLevel.value","location":"-q-r-code--kotlin/qrcode.raw/-error-correction-level/value.html","searchKeys":["value","val value: Int","qrcode.raw.ErrorCorrectionLevel.value"]},{"name":"val value: Int","description":"qrcode.raw.QRCodeDataType.value","location":"-q-r-code--kotlin/qrcode.raw/-q-r-code-data-type/value.html","searchKeys":["value","val value: Int","qrcode.raw.QRCodeDataType.value"]},{"name":"val width: Int","description":"qrcode.render.QRCodeGraphics.width","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/[android]width.html","searchKeys":["width","val width: Int","qrcode.render.QRCodeGraphics.width"]},{"name":"val width: Int","description":"qrcode.render.QRCodeGraphics.width","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/[js]width.html","searchKeys":["width","val width: Int","qrcode.render.QRCodeGraphics.width"]},{"name":"val width: Int","description":"qrcode.render.QRCodeGraphics.width","location":"-q-r-code--kotlin/qrcode.render/-q-r-code-graphics/[jvm]width.html","searchKeys":["width","val width: Int","qrcode.render.QRCodeGraphics.width"]},{"name":"var dark: Boolean","description":"qrcode.internals.QRCodeSquare.dark","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/dark.html","searchKeys":["dark","var dark: Boolean","qrcode.internals.QRCodeSquare.dark"]},{"name":"var graphicsFactory: QRCodeGraphicsFactory","description":"qrcode.QRCode.graphicsFactory","location":"-q-r-code--kotlin/qrcode/-q-r-code/graphics-factory.html","searchKeys":["graphicsFactory","var graphicsFactory: QRCodeGraphicsFactory","qrcode.QRCode.graphicsFactory"]},{"name":"var rendered: Boolean","description":"qrcode.internals.QRCodeSquare.rendered","location":"-q-r-code--kotlin/qrcode.internals/-q-r-code-square/rendered.html","searchKeys":["rendered","var rendered: Boolean","qrcode.internals.QRCodeSquare.rendered"]},{"name":"var vertical: Boolean","description":"qrcode.color.LinearGradientColorFunction.vertical","location":"-q-r-code--kotlin/qrcode.color/-linear-gradient-color-function/vertical.html","searchKeys":["vertical","var vertical: Boolean","qrcode.color.LinearGradientColorFunction.vertical"]}]